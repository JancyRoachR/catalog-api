# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingTransaction',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('voucher_num', models.IntegerField(null=True, blank=True)),
                ('voucher_seq_num', models.IntegerField(null=True, blank=True)),
                ('posted_date', models.DateTimeField(null=True, blank=True)),
                ('amt_type', models.IntegerField(null=True, blank=True)),
                ('amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('note', models.CharField(max_length=255, blank=True)),
                ('source_name', models.CharField(max_length=50, blank=True)),
                ('last_updated_gmt', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionIllExpenditure',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_ill_expenditure',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionInvoiceEncumbrance',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('invoice_date', models.DateTimeField(null=True, blank=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('foreign_currency_code', models.CharField(max_length=20, blank=True)),
                ('foreign_currency_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('xy_note', models.CharField(max_length=255, blank=True)),
                ('subscription_from_date', models.DateTimeField(null=True, blank=True)),
                ('subscription_to_date', models.DateTimeField(null=True, blank=True)),
                ('invoice_record_line_item_num', models.IntegerField(null=True, blank=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_invoice_encumbrance',
                'verbose_name': 'accounting transact invoice encumbrance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionInvoiceExpenditure',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('invoice_date', models.DateTimeField(null=True, blank=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('tax_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('foreign_currency_code', models.CharField(max_length=20, blank=True)),
                ('foreign_currency_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('foreign_currency_tax_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('xy_note', models.CharField(max_length=255, blank=True)),
                ('use_tax_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('ship_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('discount_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('service_charge_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('subscription_from_date', models.DateTimeField(null=True, blank=True)),
                ('subscription_to_date', models.DateTimeField(null=True, blank=True)),
                ('invoice_record_line_item_num', models.IntegerField(null=True, blank=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_invoice_expenditure',
                'verbose_name': 'accounting transact invoice expenditure',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionManualAppropriation',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_manual_appropriation',
                'verbose_name': 'accounting transac manual appropriation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionManualEncumbrance',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_manual_encumbrance',
                'verbose_name': 'accounting transact manual encumbrance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionManualExpenditure',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_manual_expenditure',
                'verbose_name': 'accounting transact manual expenditure',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionOrderCancellation',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('foreign_currency_code', models.CharField(max_length=20, blank=True)),
                ('foreign_currency_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('subscription_from_date', models.DateTimeField(null=True, blank=True)),
                ('subscription_to_date', models.DateTimeField(null=True, blank=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_order_cancellation',
                'verbose_name': 'accounting transact order cancellation',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingTransactionOrderEncumbrance',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('foreign_currency_code', models.CharField(max_length=20, blank=True)),
                ('foreign_currency_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('subscription_from_date', models.DateTimeField(null=True, blank=True)),
                ('subscription_to_date', models.DateTimeField(null=True, blank=True)),
                ('accounting_transaction', models.ForeignKey(blank=True, to='base.AccountingTransaction', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_transaction_order_encumbrance',
                'verbose_name': 'accounting transact order encumbrance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingUnit',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_unit',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingUnitMyuser',
            fields=[
                ('code', models.ForeignKey(primary_key=True, db_column='code', to_field='code_num', serialize=False, to='base.AccountingUnit')),
                ('name', models.CharField(max_length=20, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_unit_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AccountingUnitName',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=20, blank=True)),
                ('accounting_unit', models.ForeignKey(blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'accounting_unit_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AcqTypeProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'acq_type_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AcqTypePropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'acq_type_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AcqTypePropertyName',
            fields=[
                ('acq_type_property', models.ForeignKey(primary_key=True, serialize=False, to='base.AcqTypeProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'acq_type_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AgencyProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'agency_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AgencyPropertyLocationGroup',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('location_group_port_number', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'agency_property_location_group',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AgencyPropertyMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'agency_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AgencyPropertyName',
            fields=[
                ('agency_property', models.ForeignKey(primary_key=True, serialize=False, to='base.AgencyProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'agency_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AuthorityRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('marc_type_code', models.CharField(max_length=1, blank=True)),
                ('code1', models.CharField(max_length=1, blank=True)),
                ('code2', models.CharField(max_length=1, blank=True)),
                ('suppress_code', models.CharField(max_length=1, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'authority_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='B2MCategory',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=20, blank=True)),
                ('is_staff_enabled', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'b2m_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='B2MCategoryMyuser',
            fields=[
                ('code', models.CharField(max_length=20, serialize=False, primary_key=True)),
                ('is_staff_enabled', models.NullBooleanField()),
                ('name', models.CharField(max_length=60, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'b2m_category_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='B2MCategoryName',
            fields=[
                ('b2m_category', models.ForeignKey(primary_key=True, serialize=False, to='base.B2MCategory')),
                ('name', models.CharField(max_length=60, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'b2m_category_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BackupAdmin',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=128, blank=True)),
                ('email', models.CharField(max_length=128, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'backup_admin',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibLevelProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_level_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibLevelPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_level_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibLevelPropertyName',
            fields=[
                ('bib_level_property', models.ForeignKey(primary_key=True, serialize=False, to='base.BibLevelProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_level_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('bcode1', models.CharField(max_length=1, blank=True)),
                ('bcode2', models.CharField(max_length=1, blank=True)),
                ('bcode3', models.CharField(max_length=1, blank=True)),
                ('index_change_count', models.IntegerField(null=True, blank=True)),
                ('is_on_course_reserve', models.NullBooleanField()),
                ('is_right_result_exact', models.NullBooleanField()),
                ('allocation_rule_code', models.CharField(max_length=1, blank=True)),
                ('skip_num', models.IntegerField(null=True, blank=True)),
                ('cataloging_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('marc_type_code', models.CharField(max_length=1, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordCallNumberPrefix',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('call_number_prefix', models.CharField(max_length=10, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_call_number_prefix',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordHoldingRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('holdings_display_order', models.IntegerField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_holding_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordItemRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('items_display_order', models.IntegerField(null=True, blank=True)),
                ('bibs_display_order', models.IntegerField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_item_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordLocation',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordOrderRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('orders_display_order', models.IntegerField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_order_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('best_title', models.CharField(max_length=1000, blank=True)),
                ('publish_year', models.IntegerField(null=True, blank=True)),
                ('best_title_norm', models.CharField(max_length=1000, blank=True)),
                ('best_author', models.CharField(max_length=1000, blank=True)),
                ('best_author_norm', models.CharField(max_length=1000, blank=True)),
                ('bib_level', models.ForeignKey(db_column='bib_level_code', to_field='code', blank=True, to='base.BibLevelProperty', null=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BibRecordVolumeRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('volumes_display_order', models.IntegerField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bib_record_volume_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillingLocationProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'billing_location_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillingLocationPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=1, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'billing_location_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillingLocationPropertyName',
            fields=[
                ('billing_location_property', models.ForeignKey(primary_key=True, serialize=False, to='base.BillingLocationProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'billing_location_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('created_gmt', models.DateTimeField(null=True, blank=True)),
                ('start_gmt', models.DateTimeField(null=True, blank=True)),
                ('end_gmt', models.DateTimeField(null=True, blank=True)),
                ('type_code', models.CharField(max_length=1, blank=True)),
                ('prep_period', models.IntegerField(null=True, blank=True)),
                ('delivery_code', models.SmallIntegerField(null=True, blank=True)),
                ('location_note', models.CharField(max_length=19, blank=True)),
                ('note', models.CharField(max_length=1000, blank=True)),
                ('event_name', models.CharField(max_length=1000, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'booking',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BoolInfo',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=512, blank=True)),
                ('max', models.IntegerField(null=True, blank=True)),
                ('count', models.IntegerField(null=True, blank=True)),
                ('record_range', models.CharField(max_length=512, blank=True)),
                ('bool_gmt', models.DateTimeField(null=True, blank=True)),
                ('bool_query', models.TextField(blank=True)),
                ('sql_query', models.TextField(blank=True)),
                ('is_lookup_call', models.NullBooleanField()),
                ('is_lookup_880', models.NullBooleanField()),
                ('is_search_holdings', models.NullBooleanField()),
                ('sorter_spec', models.TextField(blank=True)),
                ('lister_spec', models.TextField(blank=True)),
                ('status_code', models.CharField(max_length=1, blank=True)),
                ('iii_user_name', models.CharField(max_length=255, blank=True)),
                ('list_export_spec', models.TextField(blank=True)),
                ('owner_iii_user_name', models.CharField(max_length=255, blank=True)),
                ('is_store_field', models.NullBooleanField()),
                ('is_card_search', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'bool_info',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BoolSet',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('field_key', models.CharField(max_length=255, blank=True)),
                ('occ_num', models.IntegerField(null=True, blank=True)),
                ('bool_info', models.ForeignKey(blank=True, to='base.BoolInfo', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'bool_set',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('address', models.CharField(max_length=300, blank=True)),
                ('email_source', models.CharField(max_length=255, blank=True)),
                ('email_reply_to', models.CharField(max_length=255, blank=True)),
                ('address_latitude', models.CharField(max_length=32, blank=True)),
                ('address_longitude', models.CharField(max_length=32, blank=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'branch',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BranchChange',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('description', models.CharField(max_length=1000, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'branch_change',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BranchMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('address', models.CharField(max_length=300, blank=True)),
                ('email_source', models.CharField(max_length=255, blank=True)),
                ('email_reply_to', models.CharField(max_length=255, blank=True)),
                ('address_latitude', models.CharField(max_length=32, blank=True)),
                ('address_longitude', models.CharField(max_length=32, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'branch_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BranchName',
            fields=[
                ('branch', models.ForeignKey(primary_key=True, serialize=False, to='base.Branch')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'branch_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Catmaint',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('is_locked', models.NullBooleanField()),
                ('is_viewed', models.NullBooleanField()),
                ('condition_code_num', models.IntegerField(null=True, blank=True)),
                ('index_tag', models.CharField(max_length=1, blank=True)),
                ('index_entry', models.TextField(blank=True)),
                ('statistics_group_code_num', models.IntegerField(null=True, blank=True)),
                ('process_gmt', models.DateTimeField(null=True, blank=True)),
                ('program_code', models.CharField(max_length=255, blank=True)),
                ('iii_user_name', models.CharField(max_length=255, blank=True)),
                ('one_xx_entry', models.TextField(blank=True)),
                ('old_field', models.TextField(blank=True)),
                ('new_240_field', models.TextField(blank=True)),
                ('field', models.TextField(blank=True)),
                ('cataloging_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('index_prev', models.TextField(blank=True)),
                ('index_next', models.TextField(blank=True)),
                ('correct_heading', models.TextField(blank=True)),
                ('author', models.TextField(blank=True)),
                ('title', models.TextField(blank=True)),
                ('authority_record', models.ForeignKey(db_column='authority_record_metadata_id', blank=True, to='base.AuthorityRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'catmaint',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('items_display_order', models.IntegerField(null=True, blank=True)),
                ('due_gmt', models.DateTimeField(null=True, blank=True)),
                ('loanrule_code_num', models.IntegerField(null=True, blank=True)),
                ('checkout_gmt', models.DateTimeField(null=True, blank=True)),
                ('renewal_count', models.IntegerField(null=True, blank=True)),
                ('overdue_count', models.IntegerField(null=True, blank=True)),
                ('overdue_gmt', models.DateTimeField(null=True, blank=True)),
                ('recall_gmt', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'checkout',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CircTrans',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('transaction_gmt', models.DateTimeField(null=True, blank=True)),
                ('application_name', models.CharField(max_length=256, blank=True)),
                ('source_code', models.CharField(max_length=256, blank=True)),
                ('op_code', models.CharField(max_length=256, blank=True)),
                ('patron_record_id', models.BigIntegerField(null=True, blank=True)),
                ('item_record_id', models.BigIntegerField(null=True, blank=True)),
                ('volume_record_id', models.BigIntegerField(null=True, blank=True)),
                ('bib_record_id', models.BigIntegerField(null=True, blank=True)),
                ('stat_group_code_num', models.IntegerField(null=True, blank=True)),
                ('due_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('count_type_code_num', models.IntegerField(null=True, blank=True)),
                ('icode1', models.IntegerField(null=True, blank=True)),
                ('icode2', models.CharField(max_length=10, blank=True)),
                ('pcode1', models.CharField(max_length=1, blank=True)),
                ('pcode2', models.CharField(max_length=1, blank=True)),
                ('pcode3', models.IntegerField(null=True, blank=True)),
                ('pcode4', models.IntegerField(null=True, blank=True)),
                ('patron_home_library_code', models.CharField(max_length=5, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'circ_trans',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ClaimActionProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'claim_action_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ClaimActionPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'claim_action_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ClaimActionPropertyName',
            fields=[
                ('claim_action_property', models.ForeignKey(primary_key=True, serialize=False, to='base.ClaimActionProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'claim_action_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ColagencyCriteria',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=36, blank=True)),
                ('minimum_owed_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('start_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('end_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('grace_period', models.IntegerField(null=True, blank=True)),
                ('minimum_days_overdue', models.IntegerField(null=True, blank=True)),
                ('remove_if_less_than_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('agency_fee_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('email_source', models.CharField(max_length=201, blank=True)),
                ('email_to', models.CharField(max_length=201, blank=True)),
                ('email_cc', models.CharField(max_length=201, blank=True)),
                ('email_subject', models.CharField(max_length=201, blank=True)),
                ('auto_new_submission', models.NullBooleanField()),
                ('auto_update_submission', models.CharField(max_length=13, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'colagency_criteria',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ColagencyCriteriaHomeLibraries',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('colagency', models.ForeignKey(blank=True, to='base.ColagencyCriteria', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'colagency_criteria_home_libraries',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ColagencyCriteriaPtypes',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('colagency', models.ForeignKey(blank=True, to='base.ColagencyCriteria', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'colagency_criteria_ptypes',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ColagencyPatron',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('status', models.CharField(max_length=15, blank=True)),
                ('time_removed_gmt', models.DateTimeField(null=True, blank=True)),
                ('time_report_last_run_gmt', models.DateTimeField(null=True, blank=True)),
                ('colagency', models.ForeignKey(db_column='colagency_criteria_metadata_id', blank=True, to='base.ColagencyCriteria', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'colagency_patron',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_default', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('avg_width', models.FloatField(null=True, blank=True)),
                ('avg_cost', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'collection',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CollectionMyuser',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_default', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'collection_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=5, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'contact_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactRecordAddressType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'contact_record_address_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ControlField',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('control_num', models.IntegerField(null=True, blank=True)),
                ('p00', models.CharField(max_length=1, blank=True)),
                ('p01', models.CharField(max_length=1, blank=True)),
                ('p02', models.CharField(max_length=1, blank=True)),
                ('p03', models.CharField(max_length=1, blank=True)),
                ('p04', models.CharField(max_length=1, blank=True)),
                ('p05', models.CharField(max_length=1, blank=True)),
                ('p06', models.CharField(max_length=1, blank=True)),
                ('p07', models.CharField(max_length=1, blank=True)),
                ('p08', models.CharField(max_length=1, blank=True)),
                ('p09', models.CharField(max_length=1, blank=True)),
                ('p10', models.CharField(max_length=1, blank=True)),
                ('p11', models.CharField(max_length=1, blank=True)),
                ('p12', models.CharField(max_length=1, blank=True)),
                ('p13', models.CharField(max_length=1, blank=True)),
                ('p14', models.CharField(max_length=1, blank=True)),
                ('p15', models.CharField(max_length=1, blank=True)),
                ('p16', models.CharField(max_length=1, blank=True)),
                ('p17', models.CharField(max_length=1, blank=True)),
                ('p18', models.CharField(max_length=1, blank=True)),
                ('p19', models.CharField(max_length=1, blank=True)),
                ('p20', models.CharField(max_length=1, blank=True)),
                ('p21', models.CharField(max_length=1, blank=True)),
                ('p22', models.CharField(max_length=1, blank=True)),
                ('p23', models.CharField(max_length=1, blank=True)),
                ('p24', models.CharField(max_length=1, blank=True)),
                ('p25', models.CharField(max_length=1, blank=True)),
                ('p26', models.CharField(max_length=1, blank=True)),
                ('p27', models.CharField(max_length=1, blank=True)),
                ('p28', models.CharField(max_length=1, blank=True)),
                ('p29', models.CharField(max_length=1, blank=True)),
                ('p30', models.CharField(max_length=1, blank=True)),
                ('p31', models.CharField(max_length=1, blank=True)),
                ('p32', models.CharField(max_length=1, blank=True)),
                ('p33', models.CharField(max_length=1, blank=True)),
                ('p34', models.CharField(max_length=1, blank=True)),
                ('p35', models.CharField(max_length=1, blank=True)),
                ('p36', models.CharField(max_length=1, blank=True)),
                ('p37', models.CharField(max_length=1, blank=True)),
                ('p38', models.CharField(max_length=1, blank=True)),
                ('p39', models.CharField(max_length=1, blank=True)),
                ('p40', models.CharField(max_length=1, blank=True)),
                ('p41', models.CharField(max_length=1, blank=True)),
                ('p42', models.CharField(max_length=1, blank=True)),
                ('p43', models.CharField(max_length=1, blank=True)),
                ('occ_num', models.IntegerField(null=True, blank=True)),
                ('remainder', models.CharField(max_length=100, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'control_field',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('code', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('num', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'counter',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CountryProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'country_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CountryPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'country_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CountryPropertyName',
            fields=[
                ('country_property', models.ForeignKey(primary_key=True, serialize=False, to='base.CountryProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'country_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CourseRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('begin_date', models.DateTimeField(null=True, blank=True)),
                ('end_date', models.DateTimeField(null=True, blank=True)),
                ('ccode1', models.CharField(max_length=20, blank=True)),
                ('ccode2', models.CharField(max_length=20, blank=True)),
                ('ccode3', models.CharField(max_length=20, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'course_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CourseRecordBibRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('status_change_date', models.DateTimeField(null=True, blank=True)),
                ('status_code', models.CharField(max_length=5, blank=True)),
                ('bibs_display_order', models.IntegerField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(blank=True, to='base.BibRecord', null=True)),
                ('course_record', models.ForeignKey(blank=True, to='base.CourseRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'course_record_bib_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CourseRecordItemRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('status_change_date', models.DateTimeField(null=True, blank=True)),
                ('status_code', models.CharField(max_length=5, blank=True)),
                ('items_display_order', models.IntegerField(null=True, blank=True)),
                ('course_record', models.ForeignKey(blank=True, to='base.CourseRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'course_record_item_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DarcServiceView',
            fields=[
                ('group_name', models.CharField(max_length=30, blank=True)),
                ('service_name', models.CharField(max_length=30, serialize=False, primary_key=True)),
                ('param', models.CharField(max_length=30, blank=True)),
                ('value', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'darc_service_view',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DiacriticCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('is_unicode_style', models.NullBooleanField()),
                ('is_big5', models.NullBooleanField()),
                ('is_cccii', models.NullBooleanField()),
                ('is_eacc', models.NullBooleanField()),
                ('is_thai', models.NullBooleanField()),
                ('is_winpage', models.NullBooleanField()),
                ('is_multibyte', models.NullBooleanField()),
                ('is_decomposed_character_used', models.NullBooleanField()),
                ('is_general_rule_enabled', models.NullBooleanField()),
                ('is_staff_enabled', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'diacritic_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DiacriticMapping',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('diacritic', models.CharField(max_length=255, blank=True)),
                ('letter', models.CharField(max_length=1, blank=True)),
                ('description', models.CharField(max_length=255, blank=True)),
                ('mapped_string', models.CharField(max_length=255, blank=True)),
                ('is_preferred', models.NullBooleanField()),
                ('width', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('diacritic_category', models.ForeignKey(blank=True, to='base.DiacriticCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'diacritic_mapping',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EadHierarchy',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('entry', models.CharField(unique=True, max_length=255, blank=True)),
                ('bib_record', models.ForeignKey(null=True, blank=True, to='base.BibRecord', unique=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'ead_hierarchy',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExternalFundProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'external_fund_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExternalFundPropertyMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('accounting_unit', models.ForeignKey(blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'external_fund_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExternalFundPropertyName',
            fields=[
                ('external_fund_property', models.ForeignKey(primary_key=True, serialize=False, to='base.ExternalFundProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'external_fund_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('assessed_gmt', models.DateTimeField(null=True, blank=True)),
                ('invoice_num', models.IntegerField(null=True, blank=True)),
                ('item_charge_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('processing_fee_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('billing_fee_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('charge_code', models.CharField(max_length=1, blank=True)),
                ('paid_gmt', models.DateTimeField(null=True, blank=True)),
                ('terminal_num', models.IntegerField(null=True, blank=True)),
                ('paid_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('initials', models.CharField(max_length=12, blank=True)),
                ('created_code', models.CharField(max_length=1, blank=True)),
                ('is_print_bill', models.NullBooleanField()),
                ('description', models.CharField(max_length=100, blank=True)),
                ('checkout_gmt', models.DateTimeField(null=True, blank=True)),
                ('due_gmt', models.DateTimeField(null=True, blank=True)),
                ('returned_gmt', models.DateTimeField(null=True, blank=True)),
                ('loanrule_code_num', models.IntegerField(null=True, blank=True)),
                ('title', models.CharField(max_length=82, blank=True)),
                ('original_transfer_gmt', models.DateTimeField(null=True, blank=True)),
                ('previous_invoice_num', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fine',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FinesPaid',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('fine_assessed_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('item_charge_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('processing_fee_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('billing_fee_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('charge_type_code', models.CharField(max_length=1, blank=True)),
                ('paid_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('tty_num', models.IntegerField(null=True, blank=True)),
                ('last_paid_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('iii_user_name', models.CharField(max_length=255, blank=True)),
                ('fine_creation_mode_code', models.CharField(max_length=1, blank=True)),
                ('print_bill_code', models.CharField(max_length=1, blank=True)),
                ('checked_out_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('due_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('returned_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('loan_rule_code_num', models.IntegerField(null=True, blank=True)),
                ('description', models.CharField(max_length=100, blank=True)),
                ('paid_now_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('payment_status_code', models.CharField(max_length=1, blank=True)),
                ('payment_type_code', models.CharField(max_length=1, blank=True)),
                ('payment_note', models.CharField(max_length=150, blank=True)),
                ('transaction_id', models.IntegerField(null=True, blank=True)),
                ('invoice_num', models.IntegerField(null=True, blank=True)),
                ('old_invoice_num', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fines_paid',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FirmProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=5, blank=True)),
                ('category_code', models.CharField(max_length=1, blank=True)),
                ('contact_name', models.CharField(max_length=255, blank=True)),
                ('contact_addr1', models.CharField(max_length=255, blank=True)),
                ('contact_addr2', models.CharField(max_length=255, blank=True)),
                ('contact_addr3', models.CharField(max_length=255, blank=True)),
                ('contact_addr4', models.CharField(max_length=255, blank=True)),
                ('telephone', models.CharField(max_length=255, blank=True)),
                ('paid_thru_date', models.DateTimeField(null=True, blank=True)),
                ('payment_info', models.CharField(max_length=255, blank=True)),
                ('note1', models.CharField(max_length=255, blank=True)),
                ('note2', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'firm_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FirmPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=5, serialize=False, primary_key=True)),
                ('category_code', models.CharField(max_length=1, blank=True)),
                ('contact_name', models.CharField(max_length=255, blank=True)),
                ('contact_addr1', models.CharField(max_length=255, blank=True)),
                ('contact_addr2', models.CharField(max_length=255, blank=True)),
                ('contact_addr3', models.CharField(max_length=255, blank=True)),
                ('contact_addr4', models.CharField(max_length=255, blank=True)),
                ('telephone', models.CharField(max_length=255, blank=True)),
                ('paid_thru_date', models.DateTimeField(null=True, blank=True)),
                ('payment_info', models.CharField(max_length=255, blank=True)),
                ('note1', models.CharField(max_length=255, blank=True)),
                ('note2', models.CharField(max_length=255, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'firm_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FirmPropertyName',
            fields=[
                ('firm_property', models.ForeignKey(primary_key=True, serialize=False, to='base.FirmProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'firm_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FixfldType',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_enabled', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'fixfld_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FixfldTypeMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fixfld_type_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FixfldTypeName',
            fields=[
                ('fixfldtype', models.ForeignKey(primary_key=True, db_column='fixfld_property_id', serialize=False, to='base.FixfldType')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fixfld_type_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ForeignCurrency',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(max_length=5, blank=True)),
                ('rate', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('description', models.CharField(max_length=256, blank=True)),
                ('format', models.CharField(max_length=10, blank=True)),
                ('accounting_unit', models.ForeignKey(db_column='accounting_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'foreign_currency',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FormProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'form_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FormPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'form_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FormPropertyName',
            fields=[
                ('form_property', models.ForeignKey(primary_key=True, serialize=False, to='base.FormProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'form_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'function',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FunctionCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'function_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('fund_code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('external_fund', models.IntegerField(null=True, blank=True)),
                ('appropriation', models.IntegerField(null=True, blank=True)),
                ('expenditure', models.IntegerField(null=True, blank=True)),
                ('encumbrance', models.IntegerField(null=True, blank=True)),
                ('num_orders', models.IntegerField(null=True, blank=True)),
                ('num_payments', models.IntegerField(null=True, blank=True)),
                ('warning_percent', models.IntegerField(null=True, blank=True)),
                ('discount_percent', models.IntegerField(null=True, blank=True)),
                ('accounting_unit', models.ForeignKey(db_column='acct_unit', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundMaster',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(null=True, blank=True)),
                ('code', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_master',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundMyuser',
            fields=[
                ('fund_master', models.ForeignKey(primary_key=True, serialize=False, to='base.FundMaster')),
                ('fund_code', models.CharField(max_length=255, blank=True)),
                ('external_fund_code_num', models.IntegerField(null=True, blank=True)),
                ('appropriation', models.IntegerField(null=True, blank=True)),
                ('expenditure', models.IntegerField(null=True, blank=True)),
                ('encumbrance', models.IntegerField(null=True, blank=True)),
                ('num_orders', models.IntegerField(null=True, blank=True)),
                ('num_payments', models.IntegerField(null=True, blank=True)),
                ('warning_percent', models.IntegerField(null=True, blank=True)),
                ('discount_percent', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('note1', models.CharField(max_length=255, blank=True)),
                ('note2', models.CharField(max_length=255, blank=True)),
                ('accounting_unit', models.ForeignKey(db_column='acct_unit', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('warning_percent', models.IntegerField(null=True, blank=True)),
                ('discount_percent', models.IntegerField(null=True, blank=True)),
                ('user_code1', models.CharField(max_length=255, blank=True)),
                ('user_code2', models.CharField(max_length=255, blank=True)),
                ('user_code3', models.CharField(max_length=255, blank=True)),
                ('is_active', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundPropertyName',
            fields=[
                ('fund_property', models.ForeignKey(primary_key=True, serialize=False, to='base.FundProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('note1', models.CharField(max_length=255, blank=True)),
                ('note2', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundSummary',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('appropriation', models.IntegerField(null=True, blank=True)),
                ('expenditure', models.IntegerField(null=True, blank=True)),
                ('encumbrance', models.IntegerField(null=True, blank=True)),
                ('num_orders', models.IntegerField(null=True, blank=True)),
                ('num_payments', models.IntegerField(null=True, blank=True)),
                ('fund_property', models.ForeignKey(null=True, blank=True, to='base.FundProperty', unique=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_summary',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundSummarySubfund',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('value', models.IntegerField(null=True, blank=True)),
                ('fund_summary', models.ForeignKey(blank=True, to='base.FundSummary', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_summary_subfund',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundType',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FundTypeSummary',
            fields=[
                ('fund_type', models.ForeignKey(primary_key=True, serialize=False, to='base.FundType')),
                ('last_lien_num', models.IntegerField(null=True, blank=True)),
                ('last_voucher_num', models.IntegerField(null=True, blank=True)),
                ('accounting_unit', models.ForeignKey(blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'fund_type_summary',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GtypeProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'gtype_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GtypePropertyMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'gtype_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GtypePropertyName',
            fields=[
                ('gtype_property', models.ForeignKey(primary_key=True, serialize=False, to='base.GtypeProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'gtype_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Hold',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('placed_gmt', models.DateTimeField(null=True, blank=True)),
                ('is_frozen', models.NullBooleanField()),
                ('delay_days', models.IntegerField(null=True, blank=True)),
                ('expires_gmt', models.DateTimeField(null=True, blank=True)),
                ('status', models.CharField(max_length=1, blank=True)),
                ('is_ir', models.NullBooleanField()),
                ('is_ill', models.NullBooleanField()),
                ('note', models.CharField(max_length=128, blank=True)),
                ('ir_print_name', models.CharField(max_length=255, blank=True)),
                ('ir_delivery_stop_name', models.CharField(max_length=255, blank=True)),
                ('is_ir_converted_request', models.NullBooleanField()),
                ('patron_records_display_order', models.IntegerField(null=True, blank=True)),
                ('records_display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'hold',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('is_inherit_loc', models.NullBooleanField()),
                ('allocation_rule_code', models.CharField(max_length=1, blank=True)),
                ('label_code', models.CharField(max_length=1, blank=True)),
                ('scode1', models.CharField(max_length=1, blank=True)),
                ('scode2', models.CharField(max_length=1, blank=True)),
                ('claimon_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('scode3', models.CharField(max_length=1, blank=True)),
                ('scode4', models.CharField(max_length=1, blank=True)),
                ('update_cnt', models.CharField(max_length=1, blank=True)),
                ('piece_cnt', models.IntegerField(null=True, blank=True)),
                ('echeckin_code', models.CharField(max_length=1, blank=True)),
                ('media_type_code', models.CharField(max_length=1, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('accounting_unit', models.ForeignKey(db_column='accounting_unit_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordAddressType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_address_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordBox',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('box_count', models.IntegerField(null=True, blank=True)),
                ('enum_level_a', models.CharField(max_length=256, blank=True)),
                ('enum_level_b', models.CharField(max_length=256, blank=True)),
                ('enum_level_c', models.CharField(max_length=256, blank=True)),
                ('enum_level_d', models.CharField(max_length=256, blank=True)),
                ('enum_level_e', models.CharField(max_length=256, blank=True)),
                ('enum_level_f', models.CharField(max_length=256, blank=True)),
                ('enum_level_g', models.CharField(max_length=256, blank=True)),
                ('enum_level_h', models.CharField(max_length=256, blank=True)),
                ('chron_level_i', models.CharField(max_length=256, blank=True)),
                ('chron_level_i_trans_date', models.CharField(max_length=256, blank=True)),
                ('chron_level_j', models.CharField(max_length=256, blank=True)),
                ('chron_level_j_trans_date', models.CharField(max_length=256, blank=True)),
                ('chron_level_k', models.CharField(max_length=256, blank=True)),
                ('chron_level_k_trans_date', models.CharField(max_length=256, blank=True)),
                ('chron_level_l', models.CharField(max_length=256, blank=True)),
                ('chron_level_l_trans_date', models.CharField(max_length=256, blank=True)),
                ('chron_level_m', models.CharField(max_length=256, blank=True)),
                ('chron_level_m_trans_date', models.CharField(max_length=256, blank=True)),
                ('note', models.CharField(max_length=256, blank=True)),
                ('box_status_code', models.CharField(max_length=1, blank=True)),
                ('claim_cnt', models.IntegerField(null=True, blank=True)),
                ('copies_cnt', models.IntegerField(null=True, blank=True)),
                ('url', models.CharField(max_length=256, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('staff_note', models.CharField(max_length=256, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_box',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordBoxItem',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('holding_record_box', models.ForeignKey(blank=True, to='base.HoldingRecordBox', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_box_item',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordCard',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('status_code', models.CharField(max_length=1, blank=True)),
                ('display_format_code', models.CharField(max_length=1, blank=True)),
                ('is_suppress_opac_display', models.NullBooleanField()),
                ('is_create_item', models.NullBooleanField()),
                ('is_usmarc', models.NullBooleanField()),
                ('is_marc', models.NullBooleanField()),
                ('is_use_default_enum', models.NullBooleanField()),
                ('is_use_default_date', models.NullBooleanField()),
                ('update_method_code', models.CharField(max_length=1, blank=True)),
                ('holding_record', models.ForeignKey(blank=True, to='base.HoldingRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_card',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordCardlink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('card_type_code', models.CharField(max_length=1, blank=True)),
                ('link_count', models.IntegerField(null=True, blank=True)),
                ('enum_level_a', models.CharField(max_length=256, blank=True)),
                ('enum_level_a_disp_mode', models.CharField(max_length=1, blank=True)),
                ('enum_level_b', models.CharField(max_length=256, blank=True)),
                ('enum_level_b_limit', models.IntegerField(null=True, blank=True)),
                ('enum_level_b_rollover', models.CharField(max_length=1, blank=True)),
                ('enum_level_b_disp_mode', models.CharField(max_length=1, blank=True)),
                ('enum_level_c', models.CharField(max_length=256, blank=True)),
                ('enum_level_c_limit', models.IntegerField(null=True, blank=True)),
                ('enum_level_c_rollover', models.CharField(max_length=1, blank=True)),
                ('enum_level_c_disp_mode', models.CharField(max_length=1, blank=True)),
                ('enum_level_d', models.CharField(max_length=256, blank=True)),
                ('enum_level_d_limit', models.IntegerField(null=True, blank=True)),
                ('enum_level_d_rollover', models.CharField(max_length=1, blank=True)),
                ('enum_level_d_disp_mode', models.CharField(max_length=1, blank=True)),
                ('enum_level_e', models.CharField(max_length=256, blank=True)),
                ('enum_level_e_limit', models.IntegerField(null=True, blank=True)),
                ('enum_level_e_rollover', models.CharField(max_length=1, blank=True)),
                ('enum_level_e_disp_mode', models.CharField(max_length=1, blank=True)),
                ('enum_level_f', models.CharField(max_length=256, blank=True)),
                ('enum_level_f_limit', models.IntegerField(null=True, blank=True)),
                ('enum_level_f_rollover', models.CharField(max_length=1, blank=True)),
                ('enum_level_f_disp_mode', models.CharField(max_length=1, blank=True)),
                ('alt_enum_level_g', models.CharField(max_length=256, blank=True)),
                ('alt_enum_level_g_disp_mode', models.CharField(max_length=1, blank=True)),
                ('alt_enum_level_h', models.CharField(max_length=256, blank=True)),
                ('alt_enum_level_h_disp_mode', models.CharField(max_length=1, blank=True)),
                ('chron_level_i', models.CharField(max_length=256, blank=True)),
                ('chron_level_j', models.CharField(max_length=256, blank=True)),
                ('chron_level_k', models.CharField(max_length=256, blank=True)),
                ('chron_level_l', models.CharField(max_length=256, blank=True)),
                ('chron_level_m', models.CharField(max_length=256, blank=True)),
                ('frequency_code', models.CharField(max_length=10, blank=True)),
                ('calendar_change', models.CharField(max_length=256, blank=True)),
                ('opac_label', models.CharField(max_length=256, blank=True)),
                ('is_advanced', models.NullBooleanField()),
                ('days_btw_iss', models.IntegerField(null=True, blank=True)),
                ('claim_days', models.IntegerField(null=True, blank=True)),
                ('bind_unit', models.IntegerField(null=True, blank=True)),
                ('bind_delay', models.IntegerField(null=True, blank=True)),
                ('is_bind_with_issue', models.NullBooleanField()),
                ('is_use_autumn', models.NullBooleanField()),
                ('enum_level_count', models.IntegerField(null=True, blank=True)),
                ('alt_enum_level_count', models.IntegerField(null=True, blank=True)),
                ('current_item', models.IntegerField(null=True, blank=True)),
                ('alt_enum_level_h_limit', models.IntegerField(null=True, blank=True)),
                ('alt_enum_level_h_rollover', models.CharField(max_length=1, blank=True)),
                ('holding_record_card', models.ForeignKey(blank=True, to='base.HoldingRecordCard', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_cardlink',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordErmHolding',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('marc_tag', models.CharField(max_length=3, blank=True)),
                ('marc_ind1', models.CharField(max_length=1, blank=True)),
                ('marc_ind2', models.CharField(max_length=1, blank=True)),
                ('occ_num', models.IntegerField(null=True, blank=True)),
                ('field_content', models.CharField(max_length=20001, blank=True)),
                ('holding_record', models.ForeignKey(blank=True, to='base.HoldingRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_erm_holding',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordItemRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('items_display_order', models.IntegerField(null=True, blank=True)),
                ('holding_record', models.ForeignKey(blank=True, to='base.HoldingRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_item_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordLocation',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('holding_record', models.ForeignKey(blank=True, to='base.HoldingRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HoldingRecordRouting',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('copy_num', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_patron_routing', models.NullBooleanField()),
                ('priority_num', models.IntegerField(null=True, blank=True)),
                ('routefile_code_num', models.IntegerField(null=True, blank=True)),
                ('iii_user_name', models.CharField(max_length=3, blank=True)),
                ('field_position', models.IntegerField(null=True, blank=True)),
                ('holding_record', models.ForeignKey(blank=True, to='base.HoldingRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'holding_record_routing',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiLanguage',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('description', models.CharField(max_length=64, blank=True)),
                ('staff_enabled', models.NullBooleanField()),
                ('public_enabled', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_right_to_left', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_language',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiLanguageMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('description', models.CharField(max_length=64, blank=True)),
                ('staff_enabled', models.NullBooleanField()),
                ('public_enabled', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_right_to_left', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_language_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiLanguageName',
            fields=[
                ('iii_language', models.ForeignKey(primary_key=True, serialize=False, to='base.IiiLanguage')),
                ('description', models.CharField(max_length=255, blank=True)),
                ('name_iii_language_id', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_language_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiRole',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
                ('is_disabled_during_read_only_access', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_role',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiRoleCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_role_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiRoleCategoryName',
            fields=[
                ('iii_role_category', models.ForeignKey(primary_key=True, serialize=False, to='base.IiiRoleCategory')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_role_category_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiRoleName',
            fields=[
                ('iii_role', models.ForeignKey(primary_key=True, serialize=False, to='base.IiiRole')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_role_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiUser',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=255, blank=True)),
                ('location_group_port_number', models.IntegerField(null=True, blank=True)),
                ('iii_user_group_code', models.CharField(max_length=255, blank=True)),
                ('full_name', models.CharField(max_length=255, blank=True)),
                ('timeout_warning_seconds', models.IntegerField(null=True, blank=True)),
                ('timeout_logout_seconds', models.IntegerField(null=True, blank=True)),
                ('scope_menu_id', models.IntegerField(null=True, blank=True)),
                ('scope_menu_bitmask', models.CharField(max_length=2048, blank=True)),
                ('is_new_account', models.NullBooleanField()),
                ('last_password_change_gmt', models.DateTimeField(null=True, blank=True)),
                ('is_exempt', models.NullBooleanField()),
                ('is_suspended', models.NullBooleanField()),
                ('is_context_only', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_user',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiUserFundMaster',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('fund_master', models.ForeignKey(blank=True, to='base.FundMaster', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_user_fund_master',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiUserGroup',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
                ('concurrent_max', models.IntegerField(null=True, blank=True)),
                ('is_independent', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_user_group',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiUserIiiRole',
            fields=[
                ('iii_user', models.ForeignKey(primary_key=True, serialize=False, to='base.IiiUser')),
                ('iii_role', models.ForeignKey(blank=True, to='base.IiiRole', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_user_iii_role',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiUserLocation',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('iii_user', models.ForeignKey(blank=True, to='base.IiiUser', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_user_location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IiiUserWorkflow',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('iii_user', models.ForeignKey(db_column='iii_user_id', blank=True, to='base.IiiUser', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'iii_user_workflow',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InvoiceRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('invoice_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('paid_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('status_code', models.CharField(max_length=20, blank=True)),
                ('posted_data_gmt', models.DateTimeField(null=True, blank=True)),
                ('is_paid_date_received_date', models.NullBooleanField()),
                ('ncode1', models.CharField(max_length=1, blank=True)),
                ('ncode2', models.CharField(max_length=1, blank=True)),
                ('ncode3', models.CharField(max_length=1, blank=True)),
                ('invoice_number_text', models.CharField(max_length=20, blank=True)),
                ('iii_user_name', models.CharField(max_length=20, blank=True)),
                ('foreign_currency_code', models.CharField(max_length=20, blank=True)),
                ('foreign_currency_format', models.CharField(max_length=30, blank=True)),
                ('foreign_currency_exchange_rate', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('tax_type_code', models.CharField(max_length=30, blank=True)),
                ('discount_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('grand_total_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('subtotal_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('shipping_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('total_tax_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('use_tax_percentage_rate', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('use_tax_type_code', models.CharField(max_length=10, blank=True)),
                ('use_tax_ship_service_code', models.CharField(max_length=10, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('accounting_unit', models.ForeignKey(db_column='accounting_unit_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'invoice_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InvoiceRecordLine',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('paid_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('lien_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('lien_flag', models.IntegerField(null=True, blank=True)),
                ('list_price', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('fund_code', models.CharField(max_length=20, blank=True)),
                ('subfund_num', models.IntegerField(null=True, blank=True)),
                ('copies_paid_cnt', models.IntegerField(null=True, blank=True)),
                ('status_code', models.CharField(max_length=5, blank=True)),
                ('note', models.CharField(max_length=20001, blank=True)),
                ('is_single_copy_partial_pmt', models.NullBooleanField()),
                ('title', models.CharField(max_length=20001, blank=True)),
                ('multiflag_code', models.CharField(max_length=1, blank=True)),
                ('line_level_tax', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('accounting_transaction_voucher_num', models.IntegerField(null=True, blank=True)),
                ('accounting_transaction_voucher_seq_num', models.IntegerField(null=True, blank=True)),
                ('line_cnt', models.IntegerField(null=True, blank=True)),
                ('is_use_tax', models.NullBooleanField()),
                ('external_fund', models.ForeignKey(db_column='external_fund_code_num', to_field='code_num', blank=True, to='base.ExternalFundProperty', null=True)),
                ('invoice_record', models.ForeignKey(blank=True, to='base.InvoiceRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'invoice_record_line',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InvoiceRecordVendorSummary',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('vendor_address_line1', models.CharField(max_length=1000, blank=True)),
                ('voucher_num', models.IntegerField(null=True, blank=True)),
                ('voucher_total', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('invoice_record', models.ForeignKey(blank=True, to='base.InvoiceRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'invoice_record_vendor_summary',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemCircHistory',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('checkout_gmt', models.DateTimeField(null=True, blank=True)),
                ('checkin_gmt', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'item_circ_history',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('icode1', models.IntegerField(null=True, blank=True)),
                ('icode2', models.CharField(max_length=1, blank=True)),
                ('is_inherit_loc', models.NullBooleanField()),
                ('price', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('last_checkin_gmt', models.DateTimeField(null=True, blank=True)),
                ('checkout_total', models.IntegerField(null=True, blank=True)),
                ('renewal_total', models.IntegerField(null=True, blank=True)),
                ('last_year_to_date_checkout_total', models.IntegerField(null=True, blank=True)),
                ('year_to_date_checkout_total', models.IntegerField(null=True, blank=True)),
                ('is_bib_hold', models.NullBooleanField()),
                ('copy_num', models.IntegerField(null=True, blank=True)),
                ('inventory_gmt', models.DateTimeField(null=True, blank=True)),
                ('use3_count', models.IntegerField(null=True, blank=True)),
                ('last_checkout_gmt', models.DateTimeField(null=True, blank=True)),
                ('internal_use_count', models.IntegerField(null=True, blank=True)),
                ('copy_use_count', models.IntegerField(null=True, blank=True)),
                ('item_message_code', models.CharField(max_length=1, blank=True)),
                ('opac_message_code', models.CharField(max_length=1, blank=True)),
                ('virtual_type_code', models.CharField(max_length=1, blank=True)),
                ('virtual_item_central_code_num', models.IntegerField(null=True, blank=True)),
                ('holdings_code', models.CharField(max_length=1, blank=True)),
                ('save_checkout_total', models.IntegerField(null=True, blank=True)),
                ('distance_learning_status', models.SmallIntegerField(null=True, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'item_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemRecordProperty',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('call_number', models.CharField(max_length=1000, blank=True)),
                ('call_number_norm', models.CharField(max_length=1000, blank=True)),
                ('barcode', models.CharField(max_length=1000, blank=True)),
                ('item_record', models.ForeignKey(null=True, blank=True, to='base.ItemRecord', unique=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'item_record_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemStatusProperty',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'item_status_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemStatusPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=1, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'item_status_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItemStatusPropertyName',
            fields=[
                ('item_status_property', models.ForeignKey(primary_key=True, serialize=False, to='base.ItemStatusProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'item_status_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItypeProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'itype_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItypePropertyCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(unique=True, null=True, blank=True)),
                ('is_default', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'itype_property_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItypePropertyCategoryMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'itype_property_category_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItypePropertyCategoryName',
            fields=[
                ('itype_property_category', models.ForeignKey(primary_key=True, serialize=False, to='base.ItypePropertyCategory')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'itype_property_category_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItypePropertyMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('itype_property_category', models.ForeignKey(blank=True, to='base.ItypePropertyCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'itype_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ItypePropertyName',
            fields=[
                ('itype_property', models.ForeignKey(primary_key=True, serialize=False, to='base.ItypeProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'itype_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='KeywordSynonym',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('keyword', models.CharField(max_length=255, blank=True)),
                ('synonym', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'keyword_synonym',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LanguageProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_public', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'language_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LanguagePropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_public', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'language_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LanguagePropertyName',
            fields=[
                ('language_property', models.ForeignKey(primary_key=True, serialize=False, to='base.LanguageProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'language_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LeaderField',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('record_status_code', models.CharField(max_length=1, blank=True)),
                ('record_type_code', models.CharField(max_length=1, blank=True)),
                ('bib_level_code', models.CharField(max_length=1, blank=True)),
                ('control_type_code', models.CharField(max_length=1, blank=True)),
                ('char_encoding_scheme_code', models.CharField(max_length=1, blank=True)),
                ('encoding_level_code', models.CharField(max_length=1, blank=True)),
                ('descriptive_cat_form_code', models.CharField(max_length=1, blank=True)),
                ('multipart_level_code', models.CharField(max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'leader_field',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LicenseRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('confidential_code', models.CharField(max_length=1, blank=True)),
                ('auto_renew_code', models.CharField(max_length=1, blank=True)),
                ('status_code', models.CharField(max_length=1, blank=True)),
                ('type_code', models.CharField(max_length=1, blank=True)),
                ('change_to_code', models.CharField(max_length=1, blank=True)),
                ('breach_procedure_code', models.CharField(max_length=1, blank=True)),
                ('termination_procedure_code', models.CharField(max_length=1, blank=True)),
                ('perpetual_access_code', models.CharField(max_length=1, blank=True)),
                ('archival_provisions_code', models.CharField(max_length=1, blank=True)),
                ('warranty_code', models.CharField(max_length=1, blank=True)),
                ('disability_compliance_code', models.CharField(max_length=1, blank=True)),
                ('performance_requirement_code', models.CharField(max_length=1, blank=True)),
                ('liability_code', models.CharField(max_length=1, blank=True)),
                ('idemnification_code', models.CharField(max_length=1, blank=True)),
                ('law_and_venue_code', models.CharField(max_length=1, blank=True)),
                ('user_confidentiality_code', models.CharField(max_length=1, blank=True)),
                ('suppress_code', models.CharField(max_length=1, blank=True)),
                ('lcode1', models.CharField(max_length=1, blank=True)),
                ('lcode2', models.CharField(max_length=1, blank=True)),
                ('lcode3', models.CharField(max_length=1, blank=True)),
                ('concurrent_users_count', models.IntegerField(null=True, blank=True)),
                ('license_sign_gmt', models.DateTimeField(null=True, blank=True)),
                ('licensor_sign_gmt', models.DateTimeField(null=True, blank=True)),
                ('contract_start_gmt', models.DateTimeField(null=True, blank=True)),
                ('contract_end_gmt', models.DateTimeField(null=True, blank=True)),
                ('breach_cure', models.IntegerField(null=True, blank=True)),
                ('cancellation_notice', models.IntegerField(null=True, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('ldate4', models.DateTimeField(null=True, blank=True)),
                ('llang2', models.CharField(max_length=3, blank=True)),
                ('accounting_unit', models.ForeignKey(db_column='accounting_unit_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'license_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=5, blank=True)),
                ('is_public', models.NullBooleanField()),
                ('is_requestable', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationChange',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('location_code', models.CharField(max_length=5)),
                ('description', models.CharField(max_length=1000, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'location_change',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationMyuser',
            fields=[
                ('location', models.ForeignKey(primary_key=True, db_column='code', to_field='code', serialize=False, to='base.Location')),
                ('is_public', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, blank=True)),
                ('branch', models.ForeignKey(db_column='branch_code_num', to_field='code_num', blank=True, to='base.Branch', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'location_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationName',
            fields=[
                ('location', models.ForeignKey(primary_key=True, serialize=False, to='base.Location')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'location_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationPropertyType',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('default_value', models.CharField(max_length=1024, blank=True)),
                ('is_single_value', models.NullBooleanField()),
                ('is_enabled', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'location_property_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationPropertyTypeMyuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('default_value', models.CharField(max_length=1024, blank=True)),
                ('is_single_value', models.NullBooleanField()),
                ('is_enabled', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'location_property_type_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationPropertyTypeName',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
                ('location_property_type', models.ForeignKey(blank=True, to='base.LocationPropertyType', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'location_property_type_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='LocationPropertyValue',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('value', models.CharField(max_length=1024, blank=True)),
                ('location', models.ForeignKey(blank=True, to='base.Location', null=True)),
                ('location_property_type', models.ForeignKey(blank=True, to='base.LocationPropertyType', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'location_property_value',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='M2BmapCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('original_delimiter', models.CharField(max_length=1, blank=True)),
                ('is_case_sensitive', models.NullBooleanField()),
                ('is_bar_subfield', models.NullBooleanField()),
                ('is_chinese', models.NullBooleanField()),
                ('is_stop_on_map', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'm2bmap_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='M2BmapEntry',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('comparison', models.CharField(max_length=200, blank=True)),
                ('replacement', models.CharField(max_length=200, blank=True)),
                ('m2bmap_category', models.ForeignKey(blank=True, to='base.M2BmapCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'm2bmap_entry',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MarcExportFormat',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=20, blank=True)),
                ('code_name', models.CharField(max_length=20, blank=True)),
                ('is_staff_enabled', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'marc_export_format',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MarclabelType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('marc_tag_pattern', models.CharField(max_length=50, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'marclabel_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MarclabelTypeMyuser',
            fields=[
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('marctag_pattern', models.CharField(max_length=50, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'marclabel_type_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MarclabelTypeName',
            fields=[
                ('marclabel_type', models.ForeignKey(primary_key=True, serialize=False, to='base.MarclabelType')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'marclabel_type_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MarcPreference',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('iii_user_name', models.CharField(max_length=255, blank=True)),
                ('marc_export_format_id', models.BigIntegerField(null=True, blank=True)),
                ('is_default_preference', models.NullBooleanField()),
                ('b2m_category', models.ForeignKey(db_column='b2m_category_code', to_field='code', blank=True, to='base.B2MCategory', null=True)),
                ('diacritic_category', models.ForeignKey(blank=True, to='base.DiacriticCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'marc_preference',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaterialProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_public', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'material_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaterialPropertyCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(unique=True, null=True, blank=True)),
                ('is_default', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'material_property_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaterialPropertyCategoryMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_default', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'material_property_category_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaterialPropertyCategoryName',
            fields=[
                ('material_property_category', models.ForeignKey(primary_key=True, serialize=False, to='base.MaterialPropertyCategory')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'material_property_category_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaterialPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_public', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, blank=True)),
                ('material_property_category', models.ForeignKey(blank=True, to='base.MaterialPropertyCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'material_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MaterialPropertyName',
            fields=[
                ('material_property', models.ForeignKey(primary_key=True, serialize=False, to='base.MaterialProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('facet_text', models.CharField(max_length=500, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'material_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MblockProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'mblock_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MblockPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'mblock_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MblockPropertyName',
            fields=[
                ('mblock_property', models.ForeignKey(primary_key=True, serialize=False, to='base.MblockProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'mblock_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NetworkAccessView',
            fields=[
                ('port', models.IntegerField(serialize=False, primary_key=True)),
                ('is_enabled', models.NullBooleanField()),
                ('is_super_user', models.NullBooleanField()),
                ('ip_range', models.CharField(max_length=255, blank=True)),
                ('is_accessible', models.NullBooleanField()),
                ('login_name', models.CharField(max_length=128, blank=True)),
                ('service_level', models.IntegerField(null=True, blank=True)),
                ('comment', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'network_access_view',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NotificationMediumProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'notification_medium_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NotificationMediumPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'notification_medium_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NotificationMediumPropertyName',
            fields=[
                ('notification_medium_property', models.ForeignKey(primary_key=True, serialize=False, to='base.NotificationMediumProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'notification_medium_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OaiCrosswalk',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('marc_type', models.CharField(max_length=1, blank=True)),
                ('metadata_prefix', models.CharField(max_length=32, blank=True)),
                ('name', models.CharField(unique=True, max_length=32, blank=True)),
                ('description', models.CharField(max_length=255, blank=True)),
                ('is_system', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'oai_crosswalk',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OaiCrosswalkField',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('element_name', models.CharField(max_length=100, blank=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('marc_tag', models.CharField(max_length=3, blank=True)),
                ('subfields', models.CharField(max_length=26, blank=True)),
                ('is_add_subfield', models.NullBooleanField()),
                ('is_varfield', models.NullBooleanField()),
                ('fixnum', models.IntegerField(null=True, blank=True)),
                ('order_num', models.IntegerField(null=True, blank=True)),
                ('oai_crosswalk', models.ForeignKey(blank=True, to='base.OaiCrosswalk', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'oai_crosswalk_field',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderNoteProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_note_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderNotePropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_note_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderNotePropertyName',
            fields=[
                ('order_note_property', models.ForeignKey(primary_key=True, serialize=False, to='base.OrderNoteProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_note_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('catalog_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('ocode1', models.CharField(max_length=1, blank=True)),
                ('ocode2', models.CharField(max_length=1, blank=True)),
                ('ocode3', models.CharField(max_length=1, blank=True)),
                ('ocode4', models.CharField(max_length=1, blank=True)),
                ('estimated_price', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('order_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('received_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('blanket_purchase_order_num', models.CharField(max_length=10000, blank=True)),
                ('volume_count', models.IntegerField(null=True, blank=True)),
                ('fund_allocation_rule_code', models.CharField(max_length=1, blank=True)),
                ('reopen_text', models.CharField(max_length=255, blank=True)),
                ('list_price', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('list_price_foreign_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('list_price_discount_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('list_price_service_charge', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('fund_copies_paid', models.IntegerField(null=True, blank=True)),
                ('accounting_unit', models.ForeignKey(db_column='accounting_unit_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
                ('acq_type', models.ForeignKey(db_column='acq_type_code', to_field='code', blank=True, to='base.AcqTypeProperty', null=True)),
                ('billing_location', models.ForeignKey(db_column='billing_location_code', to_field='code', blank=True, to='base.BillingLocationProperty', null=True)),
                ('claim_action', models.ForeignKey(db_column='claim_action_code', to_field='code', blank=True, to='base.ClaimActionProperty', null=True)),
                ('country', models.ForeignKey(db_column='country_code', to_field='code', blank=True, to='base.CountryProperty', null=True)),
                ('form', models.ForeignKey(db_column='form_code', to_field='code', blank=True, to='base.FormProperty', null=True)),
                ('language', models.ForeignKey(db_column='language_code', to_field='code', blank=True, to='base.LanguageProperty', null=True)),
                ('order_note', models.ForeignKey(db_column='order_note_code', to_field='code', blank=True, to='base.OrderNoteProperty', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderRecordAddressType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_record_address_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderRecordCmf',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('fund_code', models.CharField(max_length=20, blank=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('location', models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True)),
                ('order_record', models.ForeignKey(blank=True, to='base.OrderRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_record_cmf',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderRecordEdifactResponse',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(max_length=20, blank=True)),
                ('message', models.CharField(max_length=512, blank=True)),
                ('event_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('order_record', models.ForeignKey(blank=True, to='base.OrderRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_record_edifact_response',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderRecordPaid',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('paid_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('paid_amount', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('foreign_paid_amount', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('foreign_code', models.CharField(max_length=10, blank=True)),
                ('voucher_num', models.IntegerField(null=True, blank=True)),
                ('invoice_code', models.CharField(max_length=20, blank=True)),
                ('invoice_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('from_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('to_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('copies', models.IntegerField(null=True, blank=True)),
                ('note', models.CharField(max_length=200, blank=True)),
                ('order_record', models.ForeignKey(blank=True, to='base.OrderRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_record_paid',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderRecordReceived',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('copy_num', models.IntegerField(null=True, blank=True)),
                ('volume_num', models.IntegerField(null=True, blank=True)),
                ('received_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('fund', models.ForeignKey(db_column='fund_code', blank=True, to='base.Fund', null=True)),
                ('item_record', models.ForeignKey(db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', null=True)),
                ('location', models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True)),
                ('order_record', models.ForeignKey(blank=True, to='base.OrderRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_record_received',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderStatusProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_status_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderStatusPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_status_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderStatusPropertyName',
            fields=[
                ('order_status_property', models.ForeignKey(primary_key=True, serialize=False, to='base.OrderStatusProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_status_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderTypeProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_type_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderTypePropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_type_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OrderTypePropertyName',
            fields=[
                ('order_type_property', models.ForeignKey(primary_key=True, serialize=False, to='base.OrderTypeProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'order_type_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('home_library_code', models.CharField(max_length=5, blank=True)),
                ('expiration_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('pcode1', models.CharField(max_length=1, blank=True)),
                ('pcode2', models.CharField(max_length=1, blank=True)),
                ('pcode3', models.SmallIntegerField(null=True, blank=True)),
                ('pcode4', models.IntegerField(null=True, blank=True)),
                ('birth_date_gmt', models.DateField(null=True, blank=True)),
                ('block_until_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('checkout_total', models.IntegerField(null=True, blank=True)),
                ('renewal_total', models.IntegerField(null=True, blank=True)),
                ('checkout_count', models.IntegerField(null=True, blank=True)),
                ('patron_message_code', models.CharField(max_length=1, blank=True)),
                ('highest_level_overdue_num', models.IntegerField(null=True, blank=True)),
                ('claims_returned_total', models.IntegerField(null=True, blank=True)),
                ('owed_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('itema_count', models.IntegerField(null=True, blank=True)),
                ('itemb_count', models.IntegerField(null=True, blank=True)),
                ('overdue_penalty_count', models.IntegerField(null=True, blank=True)),
                ('ill_checkout_total', models.IntegerField(null=True, blank=True)),
                ('debit_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('itemc_count', models.IntegerField(null=True, blank=True)),
                ('itemd_count', models.IntegerField(null=True, blank=True)),
                ('activity_gmt', models.DateTimeField(null=True, blank=True)),
                ('registration_count', models.IntegerField(null=True, blank=True)),
                ('registration_total', models.IntegerField(null=True, blank=True)),
                ('attendance_total', models.IntegerField(null=True, blank=True)),
                ('waitlist_count', models.IntegerField(null=True, blank=True)),
                ('is_reading_history_opt_in', models.NullBooleanField()),
                ('mblock', models.ForeignKey(db_column='mblock_code', to_field='code', blank=True, to='base.MblockProperty', null=True)),
                ('notification_medium', models.ForeignKey(db_column='notification_medium_code', to_field='code', blank=True, to='base.NotificationMediumProperty', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patron_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronRecordAddress',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('addr1', models.CharField(max_length=1000, blank=True)),
                ('addr2', models.CharField(max_length=1000, blank=True)),
                ('addr3', models.CharField(max_length=1000, blank=True)),
                ('village', models.CharField(max_length=1000, blank=True)),
                ('city', models.CharField(max_length=1000, blank=True)),
                ('region', models.CharField(max_length=1000, blank=True)),
                ('postal_code', models.CharField(max_length=100, blank=True)),
                ('country', models.CharField(max_length=1000, blank=True)),
                ('patron_record', models.ForeignKey(blank=True, to='base.PatronRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patron_record_address',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronRecordAddressType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patron_record_address_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronRecordFullname',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('prefix', models.CharField(max_length=50, blank=True)),
                ('first_name', models.CharField(max_length=500, blank=True)),
                ('middle_name', models.CharField(max_length=500, blank=True)),
                ('last_name', models.CharField(max_length=500, blank=True)),
                ('suffix', models.CharField(max_length=50, blank=True)),
                ('patron_record', models.ForeignKey(blank=True, to='base.PatronRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patron_record_fullname',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronRecordPhone',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('phone_number', models.CharField(max_length=200, blank=True)),
                ('patron_record', models.ForeignKey(blank=True, to='base.PatronRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patron_record_phone',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronRecordPhoneType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patron_record_phone_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PatronsToExclude',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('time_added_to_table_gmt', models.DateTimeField(null=True, blank=True)),
                ('patron_record', models.ForeignKey(null=True, db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', unique=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'patrons_to_exclude',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('pmt_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('amt_paid', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('pmt_type_code', models.CharField(max_length=20, blank=True)),
                ('pmt_note', models.CharField(max_length=255, blank=True)),
                ('patron_record', models.ForeignKey(null=True, db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', unique=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'payment',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Pblock',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_expiration_date_active', models.NullBooleanField()),
                ('max_owed_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('max_overdue_num', models.IntegerField(null=True, blank=True)),
                ('max_item_num', models.IntegerField(null=True, blank=True)),
                ('max_hold_num', models.IntegerField(null=True, blank=True)),
                ('max_ill_item_num', models.IntegerField(null=True, blank=True)),
                ('max_ill_item_per_period_num', models.IntegerField(null=True, blank=True)),
                ('max_itema_num', models.IntegerField(null=True, blank=True)),
                ('max_itemb_num', models.IntegerField(null=True, blank=True)),
                ('max_itemc_num', models.IntegerField(null=True, blank=True)),
                ('max_itemd_num', models.IntegerField(null=True, blank=True)),
                ('max_registration_num', models.IntegerField(null=True, blank=True)),
                ('max_penalty_point_num', models.IntegerField(null=True, blank=True)),
                ('penalty_point_days', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'pblock',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhraseEntry',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('index_tag', models.CharField(max_length=20, blank=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('occurrence', models.IntegerField(null=True, blank=True)),
                ('is_permuted', models.NullBooleanField()),
                ('type2', models.IntegerField(null=True, blank=True)),
                ('type3', models.CharField(max_length=1, blank=True)),
                ('index_entry', models.CharField(max_length=512, blank=True)),
                ('insert_title', models.CharField(max_length=256, blank=True)),
                ('phrase_rule_rule_num', models.IntegerField(null=True, blank=True)),
                ('phrase_rule_operation', models.CharField(max_length=1, blank=True)),
                ('phrase_rule_subfield_list', models.CharField(max_length=50, blank=True)),
                ('original_content', models.CharField(max_length=1000, blank=True)),
                ('insert_title_tag', models.CharField(max_length=1, blank=True)),
                ('insert_title_occ', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'phrase_entry',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhraseRule',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('marc_tag_pattern', models.CharField(max_length=50, blank=True)),
                ('operation', models.CharField(max_length=1, blank=True)),
                ('subfield_list', models.CharField(max_length=50, blank=True)),
                ('phrase_type_code', models.CharField(max_length=1, blank=True)),
                ('rule_num', models.IntegerField(null=True, blank=True)),
                ('is_continue', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'phrase_rule',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhraseType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'phrase_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhraseTypeName',
            fields=[
                ('phrase_type', models.ForeignKey(primary_key=True, serialize=False, to='base.PhraseType')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('plural_name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'phrase_type_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhysicalFormat',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_default', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'physical_format',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhysicalFormatMyuser',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_default', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'physical_format_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PhysicalFormatName',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
                ('physical_format', models.ForeignKey(blank=True, to='base.PhysicalFormat', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'physical_format_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgramRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('program_name', models.CharField(max_length=1024, blank=True)),
                ('reg_allowed_code', models.CharField(max_length=1, blank=True)),
                ('allocation_rule_code', models.CharField(max_length=1, blank=True)),
                ('cost', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('eligibility_code', models.CharField(max_length=1, blank=True)),
                ('publication_start_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('publication_end_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('tickler_days_to_start', models.IntegerField(null=True, blank=True)),
                ('min_alert_days_to_start', models.IntegerField(null=True, blank=True)),
                ('max_alert_seats_open', models.IntegerField(null=True, blank=True)),
                ('reg_per_patron', models.IntegerField(null=True, blank=True)),
                ('auto_transfer_code', models.CharField(max_length=1, blank=True)),
                ('is_right_result_exact', models.NullBooleanField()),
                ('gcode1', models.CharField(max_length=1, blank=True)),
                ('gcode2', models.CharField(max_length=1, blank=True)),
                ('gcode3', models.CharField(max_length=1, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'program_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgramRecordLocation',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('location', models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True)),
                ('program_record', models.ForeignKey(blank=True, to='base.ProgramRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'program_record_location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PtypeProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('value', models.SmallIntegerField(unique=True, null=True, blank=True)),
                ('tagging_allowed', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_force_right_result_exact_allowed', models.NullBooleanField()),
                ('is_comment_auto_approved', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'ptype_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PtypePropertyCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_default', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
                'db_table': 'ptype_property_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PtypePropertyCategoryMyuser',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_default', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'ptype_property_category_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PtypePropertyCategoryName',
            fields=[
                ('ptype_property_category', models.ForeignKey(primary_key=True, db_column='ptype_category_id', serialize=False, to='base.PtypePropertyCategory')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'ptype_property_category_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PtypePropertyMyuser',
            fields=[
                ('value', models.SmallIntegerField(serialize=False, primary_key=True)),
                ('tagging_allowed', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('is_force_right_result_exact_allowed', models.NullBooleanField()),
                ('is_comment_auto_approved', models.NullBooleanField()),
                ('name', models.CharField(max_length=255, blank=True)),
                ('ptype_property_category', models.ForeignKey(db_column='ptype_category_id', blank=True, to='base.PtypePropertyCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'ptype_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PtypePropertyName',
            fields=[
                ('ptype_property', models.ForeignKey(primary_key=True, db_column='ptype_id', serialize=False, to='base.PtypeProperty')),
                ('description', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'ptype_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReadingHistory',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('checkout_gmt', models.DateTimeField(null=True, blank=True)),
                ('bib_record', models.ForeignKey(db_column='bib_record_metadata_id', blank=True, to='base.BibRecord', null=True)),
                ('item_record', models.ForeignKey(db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', null=True)),
                ('patron_record', models.ForeignKey(db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'reading_history',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReceivingActionProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'receiving_action_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReceivingActionPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'receiving_action_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReceivingActionPropertyName',
            fields=[
                ('receiving_action_property', models.ForeignKey(primary_key=True, serialize=False, to='base.ReceivingActionProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'receiving_action_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReceivingLocationProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'receiving_location_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReceivingLocationPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=1, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'receiving_location_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReceivingLocationPropertyName',
            fields=[
                ('receiving_location_property', models.ForeignKey(primary_key=True, serialize=False, to='base.ReceivingLocationProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'receiving_location_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecordMetadata',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('record_num', models.IntegerField(null=True, blank=True)),
                ('creation_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('deletion_date_gmt', models.DateField(null=True, blank=True)),
                ('campus_code', models.CharField(max_length=5, blank=True)),
                ('num_revisions', models.IntegerField(null=True, blank=True)),
                ('record_last_updated_gmt', models.DateTimeField(null=True, blank=True)),
                ('previous_last_updated_gmt', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'record_metadata',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecordLock',
            fields=[
                ('id', models.OneToOneField(primary_key=True, db_column='id', serialize=False, to='base.RecordMetadata')),
            ],
            options={
                'abstract': False,
                'db_table': 'record_lock',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecordRange',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('start_num', models.IntegerField(null=True, blank=True)),
                ('last_num', models.IntegerField(null=True, blank=True)),
                ('current_count', models.IntegerField(null=True, blank=True)),
                ('deleted_count', models.IntegerField(null=True, blank=True)),
                ('max_num', models.IntegerField(null=True, blank=True)),
                ('size', models.IntegerField(null=True, blank=True)),
                ('accounting_unit', models.ForeignKey(db_column='accounting_unit_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'record_range',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecordType',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
                ('tag', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'record_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecordTypeMyuser',
            fields=[
                ('code', models.CharField(max_length=1, serialize=False, primary_key=True)),
                ('tag', models.CharField(max_length=1, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'record_type_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecordTypeName',
            fields=[
                ('record_type', models.ForeignKey(primary_key=True, serialize=False, to='base.RecordType')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'record_type_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('items_display_order', models.IntegerField(null=True, blank=True)),
                ('ptype', models.SmallIntegerField(null=True, blank=True)),
                ('patrons_display_order', models.IntegerField(null=True, blank=True)),
                ('request_gmt', models.DateTimeField(null=True, blank=True)),
                ('transaction_num', models.IntegerField(null=True, blank=True)),
                ('dl_pickup_location_code_num', models.IntegerField()),
                ('central_location', models.ForeignKey(related_name='central_request_set', db_column='central_location_code', to_field='code', blank=True, to='base.Location', null=True)),
                ('item_record', models.ForeignKey(blank=True, to='base.ItemRecord', null=True)),
                ('patron_record', models.ForeignKey(blank=True, to='base.PatronRecord', null=True)),
                ('pickup_anywhere_location', models.ForeignKey(related_name='pickupanywhere_request_set', db_column='pickup_anywhere_location_code', to_field='code', blank=True, to='base.Location', null=True)),
                ('remote_patron_record', models.ForeignKey(related_name='remote_request_set', db_column='remote_patron_record_key', blank=True, to='base.PatronRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'request',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RequestRule',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('query', models.TextField(blank=True)),
                ('sql_query', models.TextField(blank=True)),
                ('record_type', models.ForeignKey(to='base.RecordType', db_column='record_type_code', to_field='code')),
            ],
            options={
                'abstract': False,
                'db_table': 'request_rule',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RequestRuleComment',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('comment', models.TextField(blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
                ('request_rule', models.ForeignKey(blank=True, to='base.RequestRule', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'request_rule_comment',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResourceRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('is_right_result_exact', models.NullBooleanField()),
                ('rights_code', models.CharField(max_length=1, blank=True)),
                ('suppress_code', models.CharField(max_length=1, blank=True)),
                ('ecode1', models.CharField(max_length=1, blank=True)),
                ('ecode2', models.CharField(max_length=1, blank=True)),
                ('ecode3', models.CharField(max_length=1, blank=True)),
                ('ecode4', models.CharField(max_length=1, blank=True)),
                ('resource_status_code', models.CharField(max_length=1, blank=True)),
                ('package_code', models.CharField(max_length=1, blank=True)),
                ('trial_begin_gmt', models.DateTimeField(null=True, blank=True)),
                ('trial_end_gmt', models.DateTimeField(null=True, blank=True)),
                ('renewal_gmt', models.DateTimeField(null=True, blank=True)),
                ('registration_gmt', models.DateTimeField(null=True, blank=True)),
                ('activation_gmt', models.DateTimeField(null=True, blank=True)),
                ('edate5_gmt', models.DateTimeField(null=True, blank=True)),
                ('edate6_gmt', models.DateTimeField(null=True, blank=True)),
                ('publisher_code', models.CharField(max_length=5, blank=True)),
                ('licensor_code', models.CharField(max_length=5, blank=True)),
                ('copyright_holder_code', models.CharField(max_length=5, blank=True)),
                ('data_provider_code', models.CharField(max_length=5, blank=True)),
                ('consortium_code', models.CharField(max_length=5, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('access_provider', models.ForeignKey(db_column='access_provider_code', to_field='code', blank=True, to='base.ContactRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'resource_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResourceRecordHoldingRecordRelatedLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('resources_display_order', models.IntegerField(null=True, blank=True)),
                ('holding_record', models.ForeignKey(blank=True, to='base.HoldingRecord', null=True)),
                ('resource_record', models.ForeignKey(blank=True, to='base.ResourceRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'resource_record_holding_record_related_link',
                'verbose_name': 'resource record holding record rel link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResourceRecordLicenseRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('licenses_display_order', models.IntegerField(null=True, blank=True)),
                ('resources_display_order', models.IntegerField(null=True, blank=True)),
                ('license_record', models.ForeignKey(blank=True, to='base.LicenseRecord', null=True)),
                ('resource_record', models.ForeignKey(blank=True, to='base.ResourceRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'resource_record_license_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResourceRecordOrderRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('orders_display_order', models.IntegerField(null=True, blank=True)),
                ('resources_display_order', models.IntegerField(null=True, blank=True)),
                ('order_record', models.ForeignKey(blank=True, to='base.OrderRecord', null=True)),
                ('resource_record', models.ForeignKey(blank=True, to='base.ResourceRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'resource_record_order_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResourceRecordOrderRecordRelatedLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('resources_display_order', models.IntegerField(null=True, blank=True)),
                ('order_record', models.ForeignKey(blank=True, to='base.OrderRecord', null=True)),
                ('resource_record', models.ForeignKey(blank=True, to='base.ResourceRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'resource_record_order_record_related_link',
                'verbose_name': 'resource record order record rel link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReturnedBilledItem',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('item_cost_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('checked_in_time_gmt', models.DateTimeField(null=True, blank=True)),
                ('invoice_number', models.IntegerField(null=True, blank=True)),
                ('patron_record', models.ForeignKey(db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'returned_billed_item',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatCategory',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatCategoryMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_category_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatCategoryName',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(db_column='iii_language_code', to_field='code', blank=True, to='base.LanguageProperty', null=True)),
                ('scat_category', models.ForeignKey(blank=True, to='base.ScatCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_category_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatRange',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('line_num', models.IntegerField(null=True, blank=True)),
                ('start_letter_str', models.CharField(max_length=20, blank=True)),
                ('end_letter_str', models.CharField(max_length=20, blank=True)),
                ('start_num_str', models.CharField(max_length=10, blank=True)),
                ('end_num_str', models.CharField(max_length=10, blank=True)),
                ('free_text_type', models.CharField(max_length=1, blank=True)),
                ('scat_category', models.ForeignKey(blank=True, to='base.ScatCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_range',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatSection',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
                ('index_tag', models.CharField(max_length=20, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_section',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatSectionMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('index_tag', models.CharField(max_length=20, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_section_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ScatSectionName',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(db_column='iii_language_code', to_field='code', blank=True, to='base.IiiLanguage', null=True)),
                ('scat_section', models.ForeignKey(blank=True, to='base.ScatSection', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'scat_section_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SectionRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('status_code', models.CharField(max_length=1, blank=True)),
                ('section_display_order', models.IntegerField(null=True, blank=True)),
                ('min_seats', models.IntegerField(null=True, blank=True)),
                ('max_seats', models.IntegerField(null=True, blank=True)),
                ('reg_open_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('reg_close_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('ecommerce_code', models.CharField(max_length=1, blank=True)),
                ('max_alert_sent_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('tickler_sent_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('min_alert_sent_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('max_waitlist_num', models.IntegerField(null=True, blank=True)),
                ('zcode1', models.CharField(max_length=1, blank=True)),
                ('zcode2', models.CharField(max_length=1, blank=True)),
                ('zcode3', models.CharField(max_length=1, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('location', models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True)),
                ('program_record', models.ForeignKey(blank=True, to='base.ProgramRecord', null=True)),
                ('record_metadata', models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'section_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SectionRecordSession',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('start_date', models.DateTimeField(null=True, blank=True)),
                ('duration_minutes', models.IntegerField(null=True, blank=True)),
                ('session_display_order', models.IntegerField(null=True, blank=True)),
                ('start_date_str', models.CharField(max_length=14, blank=True)),
                ('section_record', models.ForeignKey(blank=True, to='base.SectionRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'section_record_session',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SectionRegistrationSeat',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('reg_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('is_registered', models.NullBooleanField()),
                ('seat_note', models.CharField(max_length=255, blank=True)),
                ('reg_date', models.CharField(max_length=14, blank=True)),
                ('patron_record', models.ForeignKey(blank=True, to='base.PatronRecord', null=True)),
                ('payment', models.ForeignKey(blank=True, to='base.Payment', null=True)),
                ('section_record', models.ForeignKey(blank=True, to='base.SectionRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'section_registration_seat',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SessionAttendance',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('total_attended', models.IntegerField(null=True, blank=True)),
                ('patron_record', models.ForeignKey(blank=True, to='base.PatronRecord', null=True)),
                ('section_record_session', models.ForeignKey(blank=True, to='base.SectionRecordSession', null=True)),
                ('section_registration_seat', models.ForeignKey(blank=True, to='base.SectionRegistrationSeat', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'session_attendance',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StatisticGroup',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
                ('location_code', models.CharField(max_length=5, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'statistic_group',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StatisticGroupMyuser',
            fields=[
                ('code', models.IntegerField(serialize=False, primary_key=True)),
                ('location_code', models.CharField(max_length=5, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'statistic_group_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StatisticGroupName',
            fields=[
                ('statistic_group', models.ForeignKey(primary_key=True, serialize=False, to='base.StatisticGroup')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'statistic_group_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SuiteBehaviorView',
            fields=[
                ('suite', models.CharField(max_length=20, blank=True)),
                ('app', models.CharField(max_length=20, blank=True)),
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('value', models.CharField(max_length=255, blank=True)),
                ('type', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'suite_behavior_view',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SuiteMessageView',
            fields=[
                ('suite', models.CharField(max_length=20, blank=True)),
                ('app', models.CharField(max_length=20, blank=True)),
                ('code', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('lang', models.CharField(max_length=3, blank=True)),
                ('value', models.CharField(max_length=1000, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'suite_message_view',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SuiteSkinView',
            fields=[
                ('suite', models.CharField(max_length=20, blank=True)),
                ('app', models.CharField(max_length=20, blank=True)),
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('lang', models.CharField(max_length=3, blank=True)),
                ('type', models.CharField(max_length=255, blank=True)),
                ('value', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'suite_skin_view',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SystemOptionGroup',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code_num', models.IntegerField(unique=True, null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'system_option_group',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SystemOptionGroupName',
            fields=[
                ('system_option_group', models.ForeignKey(primary_key=True, serialize=False, to='base.SystemOptionGroup')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'system_option_group_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TargetAudience',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_default', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'target_audience',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TargetAudienceMyuser',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('is_default', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'target_audience_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TargetAudienceName',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
                ('target_audience', models.ForeignKey(blank=True, to='base.TargetAudience', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'target_audience_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TempLocationProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=3, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'temp_location_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TempLocationPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=3, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'temp_location_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TempLocationPropertyName',
            fields=[
                ('temp_location_property', models.ForeignKey(primary_key=True, serialize=False, to='base.TempLocationProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'temp_location_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TitlePagingReport',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('prepared_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('location_type', models.IntegerField(null=True, blank=True)),
                ('location_group_code_num', models.IntegerField(null=True, blank=True)),
                ('longname', models.CharField(max_length=200, blank=True)),
                ('location', models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'title_paging_report',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TitlePagingReportEntry',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('title', models.CharField(max_length=200, blank=True)),
                ('call_number', models.CharField(max_length=200, blank=True)),
                ('is_processed', models.NullBooleanField()),
                ('record_metadata', models.ForeignKey(blank=True, to='base.RecordMetadata', null=True)),
                ('title_paging_report', models.ForeignKey(blank=True, to='base.TitlePagingReport', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'title_paging_report_entry',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TitlePagingReportEntryItem',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('scanned_date_gmt', models.DateTimeField(null=True, blank=True)),
                ('record_metadata', models.ForeignKey(blank=True, to='base.RecordMetadata', null=True)),
                ('title_paging_report_entry', models.ForeignKey(blank=True, to='base.TitlePagingReportEntry', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'title_paging_report_entry_item',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TitlePagingReportEntryPatron',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('record_metadata', models.ForeignKey(blank=True, to='base.RecordMetadata', null=True)),
                ('title_paging_report_entry', models.ForeignKey(blank=True, to='base.TitlePagingReportEntry', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'title_paging_report_entry_patron',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TransitBoxRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('barcode', models.CharField(unique=True, max_length=255, blank=True)),
                ('description', models.CharField(max_length=256, blank=True)),
                ('record', models.ForeignKey(blank=True, to='base.RecordMetadata', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'transit_box_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TransitBoxRecordItemRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('from_location', models.ForeignKey(related_name='from_transitboxrecorditemrecord_set', db_column='from_location_id', blank=True, to='base.Location', null=True)),
                ('item_record', models.ForeignKey(null=True, db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', unique=True)),
                ('to_location', models.ForeignKey(related_name='to_transitboxrecorditemrecord_set', db_column='to_location_id', blank=True, to='base.Location', null=True)),
                ('transit_box_record', models.ForeignKey(blank=True, to='base.TransitBoxRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'transit_box_record_item_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TransitBoxStatus',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('arrival_timestamp', models.DateTimeField(null=True, blank=True)),
                ('location', models.ForeignKey(blank=True, to='base.Location', null=True)),
                ('transit_box_record', models.ForeignKey(blank=True, to='base.TransitBoxRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'transit_box_status',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedAcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_acode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedAcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_acode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedBcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_bcode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedBcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_bcode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedBcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_bcode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedCategory',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedCcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ccode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedCcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ccode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedCcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ccode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedEcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ecode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedEcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ecode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedEcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ecode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedEcode4Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ecode4_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedGcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_gcode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedGcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_gcode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedGcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_gcode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedIcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_icode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedIcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_icode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedLcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_lcode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedLcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_lcode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedLcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_lcode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedNcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ncode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedNcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ncode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedNcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ncode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedOcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ocode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedOcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ocode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedOcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ocode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedOcode4Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_ocode4_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedPcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_pcode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedPcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_pcode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedPcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_pcode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedPcode4Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_pcode4_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedProperty',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(max_length=255, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_property',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedPropertyMyuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_property_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedPropertyName',
            fields=[
                ('user_defined_property', models.ForeignKey(primary_key=True, serialize=False, to='base.UserDefinedProperty')),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_property_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedScode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_scode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedScode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_scode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedScode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_scode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedScode4Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_scode4_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedVcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_vcode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedVcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_vcode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedVcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_vcode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedZcode1Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_zcode1_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedZcode2Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_zcode2_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='UserDefinedZcode3Myuser',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('user_defined_category', models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'user_defined_zcode3_myuser',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Varfield',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('varfield_type_code', models.CharField(max_length=1, blank=True)),
                ('marc_tag', models.CharField(max_length=3, blank=True)),
                ('marc_ind1', models.CharField(max_length=1, blank=True)),
                ('marc_ind2', models.CharField(max_length=1, blank=True)),
                ('occ_num', models.IntegerField(null=True, blank=True)),
                ('field_content', models.CharField(max_length=20001, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'varfield',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Subfield',
            fields=[
                ('varfield', models.ForeignKey(primary_key=True, serialize=False, to='base.Varfield')),
                ('field_type_code', models.CharField(max_length=1, blank=True)),
                ('marc_tag', models.CharField(max_length=3, blank=True)),
                ('marc_ind1', models.CharField(max_length=1, blank=True)),
                ('marc_ind2', models.CharField(max_length=1, blank=True)),
                ('occ_num', models.IntegerField(null=True, blank=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('tag', models.CharField(max_length=1, blank=True)),
                ('content', models.CharField(max_length=20001, blank=True)),
                ('record', models.ForeignKey(blank=True, to='base.RecordMetadata', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'subfield',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VarfieldType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
                ('marc_tag', models.CharField(max_length=3, blank=True)),
                ('is_enabled', models.NullBooleanField()),
                ('display_order', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'varfield_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VarfieldTypeName',
            fields=[
                ('varfield_type', models.ForeignKey(primary_key=True, serialize=False, to='base.VarfieldType')),
                ('short_name', models.CharField(max_length=20, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'varfield_type_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VendorRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=5, blank=True)),
                ('claim_cycle_code', models.CharField(max_length=1, blank=True)),
                ('vcode1', models.CharField(max_length=1, blank=True)),
                ('vcode2', models.CharField(max_length=1, blank=True)),
                ('vcode3', models.CharField(max_length=1, blank=True)),
                ('order_cnt', models.IntegerField(null=True, blank=True)),
                ('claim_cnt', models.IntegerField(null=True, blank=True)),
                ('cancel_cnt', models.IntegerField(null=True, blank=True)),
                ('receipt_cnt', models.IntegerField(null=True, blank=True)),
                ('invoice_cnt', models.IntegerField(null=True, blank=True)),
                ('orders_claimed_cnt', models.IntegerField(null=True, blank=True)),
                ('copies_received_cnt', models.IntegerField(null=True, blank=True)),
                ('order_total_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('invoice_total_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('estimated_received_price_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('estimated_cancelled_price_amt', models.DecimalField(null=True, max_digits=30, decimal_places=6, blank=True)),
                ('average_weeks', models.IntegerField(null=True, blank=True)),
                ('discount', models.IntegerField(null=True, blank=True)),
                ('vendor_message_code', models.CharField(max_length=3, blank=True)),
                ('gir_code', models.IntegerField(null=True, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('accounting_unit', models.ForeignKey(db_column='accounting_unit_code_num', to_field='code_num', blank=True, to='base.AccountingUnit', null=True)),
                ('record_metadata', models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'vendor_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VendorRecordAddress',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('addr1', models.CharField(max_length=1000, blank=True)),
                ('addr2', models.CharField(max_length=1000, blank=True)),
                ('addr3', models.CharField(max_length=1000, blank=True)),
                ('village', models.CharField(max_length=1000, blank=True)),
                ('city', models.CharField(max_length=1000, blank=True)),
                ('region', models.CharField(max_length=1000, blank=True)),
                ('postal_code', models.CharField(max_length=100, blank=True)),
                ('country', models.CharField(max_length=1000, blank=True)),
                ('vendor_record', models.ForeignKey(blank=True, to='base.VendorRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'vendor_record_address',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VendorRecordAddressType',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=1, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'vendor_record_address_type',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VolumeRecord',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, blank=True)),
                ('is_suppressed', models.NullBooleanField()),
                ('record_metadata', models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'volume_record',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VolumeRecordItemRecordLink',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('items_display_order', models.IntegerField(null=True, blank=True)),
                ('item_record', models.ForeignKey(null=True, blank=True, to='base.ItemRecord', unique=True)),
                ('volume_record', models.ForeignKey(blank=True, to='base.VolumeRecord', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'volume_record_item_record_link',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Wamreport',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('logged_gmt', models.DateTimeField(null=True, blank=True)),
                ('requesting_ip', models.CharField(max_length=32, blank=True)),
                ('requesting_port', models.IntegerField(null=True, blank=True)),
                ('requesting_iii_name', models.CharField(max_length=255, blank=True)),
                ('dest_port', models.IntegerField(null=True, blank=True)),
                ('dest_code', models.CharField(max_length=8, blank=True)),
                ('response_category_code_num', models.IntegerField(null=True, blank=True)),
                ('pcode1', models.CharField(max_length=1, blank=True)),
                ('pcode2', models.CharField(max_length=1, blank=True)),
                ('pcode3_code_num', models.IntegerField(null=True, blank=True)),
                ('pcode4_code_num', models.IntegerField(null=True, blank=True)),
                ('rejection_reason_code_num', models.IntegerField(null=True, blank=True)),
                ('patron_record', models.ForeignKey(db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True)),
                ('ptype', models.ForeignKey(db_column='ptype_code_num', to_field='value', blank=True, to='base.PtypeProperty', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'wamreport',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('name', models.CharField(unique=True, max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'workflow',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WorkflowFunction',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('display_order', models.IntegerField(null=True, blank=True)),
                ('function', models.ForeignKey(blank=True, to='base.Function', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'workflow_function',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='WorkflowName',
            fields=[
                ('workflow', models.ForeignKey(primary_key=True, serialize=False, to='base.Workflow')),
                ('menu_name', models.CharField(max_length=255, blank=True)),
                ('iii_language', models.ForeignKey(blank=True, to='base.IiiLanguage', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'workflow_name',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ZipCodeInfo',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('zip_code', models.CharField(max_length=32, blank=True)),
                ('latitude', models.CharField(max_length=32, blank=True)),
                ('longitude', models.CharField(max_length=32, blank=True)),
                ('country', models.ForeignKey(db_column='country_code', to_field='code', blank=True, to='base.CountryProperty', null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'zip_code_info',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='workflowfunction',
            name='workflow',
            field=models.ForeignKey(blank=True, to='base.Workflow', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='workflow',
            name='functions',
            field=models.ManyToManyField(to='base.Function', null=True, through='base.WorkflowFunction', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='vendorrecordaddress',
            name='vendor_record_address_type',
            field=models.ForeignKey(blank=True, to='base.VendorRecordAddressType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='varfieldtype',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='varfield',
            name='record',
            field=models.ForeignKey(blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='userdefinedproperty',
            name='user_defined_category',
            field=models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='userdefinedbcode3myuser',
            name='user_defined_category',
            field=models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='userdefinedbcode2myuser',
            name='user_defined_category',
            field=models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='userdefinedbcode1myuser',
            name='user_defined_category',
            field=models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='userdefinedacode2myuser',
            name='user_defined_category',
            field=models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='userdefinedacode1myuser',
            name='user_defined_category',
            field=models.ForeignKey(blank=True, to='base.UserDefinedCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sectionrecord',
            name='registered_patrons',
            field=models.ManyToManyField(to='base.PatronRecord', null=True, through='base.SectionRegistrationSeat', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='scatcategorymyuser',
            name='scat_section',
            field=models.ForeignKey(blank=True, to='base.ScatSection', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='scatcategory',
            name='scat_section',
            field=models.ForeignKey(blank=True, to='base.ScatSection', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='resourcerecord',
            name='holding_records',
            field=models.ManyToManyField(to='base.HoldingRecord', null=True, through='base.ResourceRecordHoldingRecordRelatedLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='resourcerecord',
            name='license_records',
            field=models.ManyToManyField(to='base.LicenseRecord', null=True, through='base.ResourceRecordLicenseRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='resourcerecord',
            name='order_records',
            field=models.ManyToManyField(to='base.OrderRecord', null=True, through='base.ResourceRecordOrderRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='resourcerecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='resourcerecord',
            name='related_order_records',
            field=models.ManyToManyField(related_name='related_resourcerecord_set', null=True, through='base.ResourceRecordOrderRecordRelatedLink', to='base.OrderRecord', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='recordrange',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='recordmetadata',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='ptypeproperty',
            name='ptype_property_category',
            field=models.ForeignKey(db_column='ptype_category_id', blank=True, to='base.PtypePropertyCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programrecord',
            name='locations',
            field=models.ManyToManyField(to='base.Location', null=True, through='base.ProgramRecordLocation', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programrecord',
            name='program_type',
            field=models.ForeignKey(db_column='program_type_code', to_field='code_num', blank=True, to='base.GtypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='phrasetype',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='phraserule',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='phraseentry',
            name='parent_record',
            field=models.ForeignKey(related_name='+', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='phraseentry',
            name='record',
            field=models.ForeignKey(blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pblock',
            name='ptype',
            field=models.ForeignKey(db_column='ptype_code_num', to_field='value', blank=True, to='base.PtypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patronrecordphone',
            name='patron_record_phone_type',
            field=models.ForeignKey(blank=True, to='base.PatronRecordPhoneType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patronrecordaddress',
            name='patron_record_address_type',
            field=models.ForeignKey(blank=True, to='base.PatronRecordAddressType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patronrecord',
            name='ptype',
            field=models.ForeignKey(db_column='ptype_code', to_field='value', blank=True, to='base.PtypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='patronrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='order_status',
            field=models.ForeignKey(db_column='order_status_code', to_field='code', blank=True, to='base.OrderStatusProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='order_type',
            field=models.ForeignKey(db_column='order_type_code', to_field='code', blank=True, to='base.OrderTypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='receiving_action',
            field=models.ForeignKey(db_column='receiving_action_code', to_field='code', blank=True, to='base.ReceivingActionProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='receiving_location',
            field=models.ForeignKey(db_column='receiving_location_code', to_field='code', blank=True, to='base.ReceivingLocationProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='temporary_location',
            field=models.ForeignKey(db_column='temporary_location_code', to_field='code', blank=True, to='base.TempLocationProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='orderrecord',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_record_code', to_field='code', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='materialpropertymyuser',
            name='physical_format',
            field=models.ForeignKey(blank=True, to='base.PhysicalFormat', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='materialproperty',
            name='material_property_category',
            field=models.ForeignKey(blank=True, to='base.MaterialPropertyCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='materialproperty',
            name='physical_format',
            field=models.ForeignKey(blank=True, to='base.PhysicalFormat', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='marclabeltypemyuser',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='marclabeltype',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='locationmyuser',
            name='parent_location',
            field=models.ForeignKey(related_name='+', db_column='parent_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='location',
            name='branch',
            field=models.ForeignKey(db_column='branch_code_num', to_field='code_num', blank=True, to='base.Branch', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='location',
            name='parent_location',
            field=models.ForeignKey(db_column='parent_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='licenserecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='leaderfield',
            name='record',
            field=models.ForeignKey(blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypepropertymyuser',
            name='physical_format',
            field=models.ForeignKey(blank=True, to='base.PhysicalFormat', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypepropertymyuser',
            name='target_audience',
            field=models.ForeignKey(blank=True, to='base.TargetAudience', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypepropertycategorymyuser',
            name='itype_property_category',
            field=models.ForeignKey(blank=True, to='base.ItypePropertyCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypepropertycategorymyuser',
            name='physical_format',
            field=models.ForeignKey(blank=True, to='base.PhysicalFormat', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypepropertycategorymyuser',
            name='target_audience',
            field=models.ForeignKey(blank=True, to='base.TargetAudience', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypeproperty',
            name='collection',
            field=models.ForeignKey(blank=True, to='base.Collection', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypeproperty',
            name='itype_property_category',
            field=models.ForeignKey(blank=True, to='base.ItypePropertyCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypeproperty',
            name='physical_format',
            field=models.ForeignKey(blank=True, to='base.PhysicalFormat', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itypeproperty',
            name='target_audience',
            field=models.ForeignKey(blank=True, to='base.TargetAudience', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='checkin_statistics_group',
            field=models.ForeignKey(related_name='checkin_itemrecord_set', db_column='checkin_statistics_group_code_num', to_field='code_num', blank=True, to='base.StatisticGroup', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='checkout_statistic_group',
            field=models.ForeignKey(related_name='checkout_itemrecord_set', db_column='checkout_statistic_group_code_num', to_field='code_num', blank=True, to='base.StatisticGroup', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='item_status',
            field=models.ForeignKey(db_column='item_status_code', to_field='code', blank=True, to='base.ItemStatusProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='itype',
            field=models.ForeignKey(db_column='itype_code_num', to_field='code_num', blank=True, to='base.ItypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='last_patron_record',
            field=models.ForeignKey(db_column='last_patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='old_location',
            field=models.ForeignKey(related_name='old_itemrecord_set', db_column='old_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='save_itype',
            field=models.ForeignKey(related_name='save_itemrecord_set', db_column='save_itype_code_num', to_field='code_num', blank=True, to='base.ItypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='save_location',
            field=models.ForeignKey(related_name='save_itemrecord_set', db_column='save_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='transit_box_records',
            field=models.ManyToManyField(to='base.TransitBoxRecord', null=True, through='base.TransitBoxRecordItemRecord', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemrecord',
            name='volume_records',
            field=models.ManyToManyField(to='base.VolumeRecord', null=True, through='base.VolumeRecordItemRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemcirchistory',
            name='item_record',
            field=models.ForeignKey(db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='itemcirchistory',
            name='patron_record',
            field=models.ForeignKey(db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecordvendorsummary',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_code', to_field='code', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecordline',
            name='invoice_record_vendor_summary',
            field=models.ForeignKey(blank=True, to='base.InvoiceRecordVendorSummary', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecordline',
            name='order_record',
            field=models.ForeignKey(db_column='order_record_metadata_id', blank=True, to='base.OrderRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecordline',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_code', to_field='code', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecord',
            name='tax_fund',
            field=models.ForeignKey(related_name='tax_invoicerecord_set', db_column='tax_fund_code', blank=True, to='base.Fund', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='invoicerecord',
            name='use_tax_fund',
            field=models.ForeignKey(related_name='usetax_invoicerecord_set', db_column='use_tax_fund_code', blank=True, to='base.Fund', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuserworkflow',
            name='workflow',
            field=models.ForeignKey(blank=True, to='base.Workflow', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuserlocation',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuserfundmaster',
            name='iii_user',
            field=models.ForeignKey(blank=True, to='base.IiiUser', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='accounting_unit',
            field=models.ForeignKey(db_column='account_unit', to_field='code_num', blank=True, to='base.AccountingUnit', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='locations',
            field=models.ManyToManyField(to='base.Location', null=True, through='base.IiiUserLocation', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='roles',
            field=models.ManyToManyField(to='base.IiiRole', null=True, through='base.IiiUserIiiRole', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='statistic_group',
            field=models.ForeignKey(db_column='statistic_group_code_num', to_field='code_num', blank=True, to='base.StatisticGroup', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='system_option_group',
            field=models.ForeignKey(db_column='system_option_group_code_num', to_field='code_num', blank=True, to='base.SystemOptionGroup', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiiuser',
            name='workflows',
            field=models.ManyToManyField(to='base.Workflow', null=True, through='base.IiiUserWorkflow', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='iiirole',
            name='iii_role_category',
            field=models.ForeignKey(blank=True, to='base.IiiRoleCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecordrouting',
            name='patron_record',
            field=models.ForeignKey(db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecordlocation',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecorditemrecordlink',
            name='item_record',
            field=models.ForeignKey(null=True, blank=True, to='base.ItemRecord', unique=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecordcard',
            name='order_record',
            field=models.ForeignKey(db_column='order_record_metadata_id', blank=True, to='base.OrderRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecordboxitem',
            name='item_record',
            field=models.ForeignKey(db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecordbox',
            name='holding_record_cardlink',
            field=models.ForeignKey(blank=True, to='base.HoldingRecordCardlink', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecordbox',
            name='item_records',
            field=models.ManyToManyField(to='base.ItemRecord', null=True, through='base.HoldingRecordBoxItem', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecord',
            name='item_records',
            field=models.ManyToManyField(to='base.ItemRecord', null=True, through='base.HoldingRecordItemRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecord',
            name='locations',
            field=models.ManyToManyField(to='base.Location', null=True, through='base.HoldingRecordLocation', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecord',
            name='receiving_location',
            field=models.ForeignKey(db_column='receiving_location_code', to_field='code', blank=True, to='base.ReceivingLocationProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='holdingrecord',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_code', to_field='code', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hold',
            name='ir_pickup_location',
            field=models.ForeignKey(related_name='irpickup_hold_set', db_column='ir_pickup_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hold',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hold',
            name='patron_record',
            field=models.ForeignKey(blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hold',
            name='pickup_location',
            field=models.ForeignKey(related_name='pickup_hold_set', db_column='pickup_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='hold',
            name='record',
            field=models.ForeignKey(blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='gtypepropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fundpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fundproperty',
            name='external_fund_property',
            field=models.ForeignKey(blank=True, to='base.ExternalFundProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fundproperty',
            name='fund_master',
            field=models.ForeignKey(blank=True, to='base.FundMaster', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fundproperty',
            name='fund_type',
            field=models.ForeignKey(blank=True, to='base.FundType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fundmyuser',
            name='fund_type',
            field=models.ForeignKey(db_column='fund_type', to_field='code', blank=True, to='base.FundType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fundmaster',
            name='accounting_unit',
            field=models.ForeignKey(blank=True, to='base.AccountingUnit', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fund',
            name='fund_type',
            field=models.ForeignKey(db_column='fund_type', to_field='code', blank=True, to='base.FundType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='function',
            name='function_category',
            field=models.ForeignKey(blank=True, to='base.FunctionCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='formpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fixfldtypename',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fixfldtype',
            name='record_type',
            field=models.ForeignKey(db_column='record_type_code', to_field='code', blank=True, to='base.RecordType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='firmpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='finespaid',
            name='charge_location',
            field=models.ForeignKey(db_column='charge_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='finespaid',
            name='item_record',
            field=models.ForeignKey(db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='finespaid',
            name='patron_record',
            field=models.ForeignKey(db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fine',
            name='charge_location',
            field=models.ForeignKey(db_column='charge_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fine',
            name='item_record',
            field=models.ForeignKey(db_column='item_record_metadata_id', blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fine',
            name='original_patron_record',
            field=models.ForeignKey(related_name='original_fine_set', db_column='original_patron_record_metadata_id', blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fine',
            name='patron_record',
            field=models.ForeignKey(blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='externalfundpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='externalfundproperty',
            name='accounting_unit',
            field=models.ForeignKey(blank=True, to='base.AccountingUnit', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='courserecorditemrecordlink',
            name='item_record',
            field=models.ForeignKey(blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='courserecord',
            name='bib_records',
            field=models.ManyToManyField(to='base.BibRecord', null=True, through='base.CourseRecordBibRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='courserecord',
            name='item_records',
            field=models.ManyToManyField(to='base.ItemRecord', null=True, through='base.CourseRecordItemRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='courserecord',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='courserecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='countrypropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='controlfield',
            name='record',
            field=models.ForeignKey(to='base.RecordMetadata'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contactrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='colagencypatron',
            name='patron_record',
            field=models.ForeignKey(null=True, db_column='patron_record_metadata_id', blank=True, to='base.PatronRecord', unique=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='colagencycriteriaptypes',
            name='ptype',
            field=models.ForeignKey(db_column='ptype', to_field='value', blank=True, to='base.PtypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='colagencycriteriahomelibraries',
            name='home_library',
            field=models.ForeignKey(db_column='home_library', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='colagencycriteria',
            name='home_libraries',
            field=models.ManyToManyField(to='base.Location', null=True, through='base.ColagencyCriteriaHomeLibraries', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='colagencycriteria',
            name='ptypes',
            field=models.ManyToManyField(to='base.PtypeProperty', null=True, through='base.ColagencyCriteriaPtypes', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='claimactionpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='circtrans',
            name='item_location',
            field=models.ForeignKey(db_column='item_location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='circtrans',
            name='itype',
            field=models.ForeignKey(db_column='itype_code_num', to_field='code_num', blank=True, to='base.ItypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='circtrans',
            name='ptype',
            field=models.ForeignKey(db_column='ptype_code', to_field='value', blank=True, to='base.PtypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checkout',
            name='item_record',
            field=models.ForeignKey(null=True, blank=True, to='base.ItemRecord', unique=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checkout',
            name='patron_record',
            field=models.ForeignKey(blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='checkout',
            name='ptype',
            field=models.ForeignKey(db_column='ptype', to_field='value', blank=True, to='base.PtypeProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='catmaint',
            name='phrase_entry',
            field=models.ForeignKey(blank=True, to='base.PhraseEntry', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='catmaint',
            name='record_metadata',
            field=models.ForeignKey(blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='branchname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='branchchange',
            name='branch',
            field=models.ForeignKey(db_column='branch_code_num', to_field='code_num', blank=True, to='base.Branch', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='boolset',
            name='record',
            field=models.ForeignKey(db_column='record_metadata_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='boolinfo',
            name='record_type',
            field=models.ForeignKey(to='base.RecordType', db_column='record_type_code', to_field='code'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='item_record',
            field=models.ForeignKey(blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='patron_record',
            field=models.ForeignKey(blank=True, to='base.PatronRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billinglocationpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecordvolumerecordlink',
            name='volume_record',
            field=models.ForeignKey(null=True, blank=True, to='base.VolumeRecord', unique=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecordproperty',
            name='material',
            field=models.ForeignKey(db_column='material_code', to_field='code', blank=True, to='base.MaterialProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecordorderrecordlink',
            name='order_record',
            field=models.ForeignKey(null=True, blank=True, to='base.OrderRecord', unique=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecordlocation',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecorditemrecordlink',
            name='item_record',
            field=models.ForeignKey(blank=True, to='base.ItemRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecordholdingrecordlink',
            name='holding_record',
            field=models.ForeignKey(null=True, blank=True, to='base.HoldingRecord', unique=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='country',
            field=models.ForeignKey(db_column='country_code', to_field='code', blank=True, to='base.CountryProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='holding_records',
            field=models.ManyToManyField(to='base.HoldingRecord', null=True, through='base.BibRecordHoldingRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='item_records',
            field=models.ManyToManyField(to='base.ItemRecord', null=True, through='base.BibRecordItemRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='language',
            field=models.ForeignKey(db_column='language_code', to_field='code', blank=True, to='base.LanguageProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='locations',
            field=models.ManyToManyField(to='base.Location', null=True, through='base.BibRecordLocation', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='order_records',
            field=models.ManyToManyField(to='base.OrderRecord', null=True, through='base.BibRecordOrderRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bibrecord',
            name='volume_records',
            field=models.ManyToManyField(to='base.VolumeRecord', null=True, through='base.BibRecordVolumeRecordLink', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biblevelpropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='b2mcategoryname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='authorityrecord',
            name='record_metadata',
            field=models.ForeignKey(db_column='record_id', blank=True, to='base.RecordMetadata', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='agencypropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='agencypropertylocationgroup',
            name='agency_property_code_num',
            field=models.ForeignKey(db_column='agency_property_code_num', to_field='code_num', blank=True, to='base.AgencyProperty', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='acqtypepropertyname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingunitname',
            name='iii_language',
            field=models.ForeignKey(blank=True, to='base.IiiLanguage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionorderencumbrance',
            name='bib_record',
            field=models.ForeignKey(db_column='bib_record_metadata_id', blank=True, to='base.BibRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionorderencumbrance',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionorderencumbrance',
            name='order_record',
            field=models.ForeignKey(db_column='order_record_metadata_id', blank=True, to='base.OrderRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionorderencumbrance',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_record_metadata_id', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionordercancellation',
            name='bib_record',
            field=models.ForeignKey(db_column='bib_record_metadata_id', blank=True, to='base.BibRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionordercancellation',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionordercancellation',
            name='order_record',
            field=models.ForeignKey(db_column='order_record_metadata_id', blank=True, to='base.OrderRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactionordercancellation',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_record_metadata_id', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceexpenditure',
            name='bib_record',
            field=models.ForeignKey(db_column='bib_record_metadata_id', blank=True, to='base.BibRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceexpenditure',
            name='invoice_record',
            field=models.ForeignKey(db_column='invoice_record_metadata_id', blank=True, to='base.InvoiceRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceexpenditure',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceexpenditure',
            name='order_record',
            field=models.ForeignKey(db_column='order_record_metadata_id', blank=True, to='base.OrderRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceexpenditure',
            name='subfund',
            field=models.ForeignKey(db_column='subfund_code', blank=True, to='base.FundSummarySubfund', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceexpenditure',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_record_metadata_id', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceencumbrance',
            name='bib_record',
            field=models.ForeignKey(db_column='bib_record_metadata_id', blank=True, to='base.BibRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceencumbrance',
            name='invoice_record',
            field=models.ForeignKey(db_column='invoice_record_metadata_id', blank=True, to='base.InvoiceRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceencumbrance',
            name='location',
            field=models.ForeignKey(db_column='location_code', to_field='code', blank=True, to='base.Location', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceencumbrance',
            name='order_record',
            field=models.ForeignKey(db_column='order_record_metadata_id', blank=True, to='base.OrderRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransactioninvoiceencumbrance',
            name='vendor_record',
            field=models.ForeignKey(db_column='vendor_record_metadata_id', blank=True, to='base.VendorRecord', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransaction',
            name='accounting_unit',
            field=models.ForeignKey(blank=True, to='base.AccountingUnit', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='accountingtransaction',
            name='fund_master',
            field=models.ForeignKey(blank=True, to='base.FundMaster', null=True),
            preserve_default=True,
        ),
    ]
